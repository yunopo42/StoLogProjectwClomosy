// Sevkiyat Ürün Takip Sayfası
var
  uGoToFleetUnit : TClForm;

  topHostPanel : TClProPanel;
  horzBox      : TClHorzScrollBox;
  cardsVersion : Integer;

  rootPanel   : TClProPanel;
  headerPanel : TClProPanel;
  titleLabel  : TClProLabel;
  tabStock    : TClProLabel;
  tabHome     : TClProLabel;   
  headerRightHost : TClProPanel;
  btnYenile   : TClProButton;
  imgRefresh  : TClProImage;

  bottomScroll: TClVertScrollBox;
  actionsPanel: TClProPanel;

  formsHost   : TClProPanel;

  formsHorz   : TClHorzScrollBox;

  truckPanel  : TClProPanel;
  shipPanel   : TClProPanel;

  truckContent: TClProPanel;
  lblPlaka    : TClProLabel;  edtPlaka : TClProEdit;
  lblSirket   : TClProLabel;  edtSirket: TClProEdit;
  lblUcret    : TClProLabel;  edtUcret : TClProEdit;

  shipContent : TClProPanel;
  rowTop_pnl  : TClProPanel;
  colUrun_pnl : TClProPanel;     lblUrun : TClProLabel;

  lblUrunAra  : TClProLabel;
  edtUrunAra  : TClProEdit;

  cmbUrun     : TClComboBox;

  colMiktar_pnl : TClProPanel;     lblMiktar : TClProLabel; edtMiktar : TClProEdit;
  rowBottom_pnl : TClProPanel;
  colAlici_pnl  : TClProPanel;     lblAlici: TClProLabel;   edtAlici: TClProEdit;
  colHedef_pnl  : TClProPanel;     lblHedef: TClProLabel;   edtHedef: TClProEdit;

  btnYeniSevkiyat : TClProButton;
  btnTeslimEdildi : TClProButton;
  btnDuzenle      : TClProButton;
  btnSil          : TClProButton;

  DBPath, DBPassword      : String;
  g_currentUserIDforFleet : Integer;
  selectedShipmentID      : Integer;

void OnGoStockClick;
{
  try
    uGoToFleetUnit.clHide;
    Clomosy.RunUnit('uGoToStockUnit');
  except
    ShowMessage('Stok ekranına geçiş yapılamadı. Ünite adını kontrol et.');
  }
}


void OnGoHomeClick;
{
  try
    uGoToFleetUnit.clHide;
    Clomosy.RunUnit('uDashboardUnit');
  except
    ShowMessage('Ana sayfaya geçiş yapılamadı. Ünite adını kontrol et.');
  }
}

//veritabanı bağlantısını yapıyoruz & eğer tablolar yoksa create ediyoruz tekrar
void FleetDB_ConnectEnsure;
var
  QCols : TClSQLiteQuery;
  hasDeliveredAt : Boolean;
  colName : String;
{
  DBPassword = '';
  if (Clomosy.PlatformIsMobile)
    DBPath = Clomosy.AppFilesPath + 'new.db3';
  else
    DBPath = 'C:/StoLogProject/database/new.db3';

  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  Clomosy.DBSQLiteQuery.Sql.Text =
    'CREATE TABLE IF NOT EXISTS shipments (' +
    ' id INTEGER PRIMARY KEY AUTOINCREMENT,' +
    ' userID INTEGER NOT NULL,' +
    ' plate TEXT NOT NULL,' +
    ' company TEXT,' +
    ' fee INTEGER,' +
    ' receiver TEXT,' +
    ' destination TEXT,' +
    ' status TEXT NOT NULL,' +
    ' created_at TEXT,' +
    ' delivered_at TEXT' +
    ');';
  Clomosy.DBSQLiteQuery.OpenOrExecute;

  hasDeliveredAt = False;
  QCols = Clomosy.DBSQLiteQueryWith('PRAGMA table_info(shipments)');
  if (QCols <> null)
  {
    QCols.OpenOrExecute;
    while (not QCols.Eof)
    {
      colName = Trim(QCols.FieldByName('name').AsString);
      if (UpperCase(colName) == 'DELIVERED_AT') { hasDeliveredAt = True; break; }
      QCols.Next;
    } // tablo yapısında DELIVERED_AT  yok ise diye kontrol ediyoruz . 
  }
  if (not hasDeliveredAt)
  {
    Clomosy.DBSQLiteQuery.Sql.Text =
      'ALTER TABLE shipments ADD COLUMN delivered_at TEXT';
    Clomosy.DBSQLiteQuery.OpenOrExecute;
  }

  Clomosy.DBSQLiteQuery.Sql.Text =
    'CREATE TABLE IF NOT EXISTS shipment_items (' +
    ' id INTEGER PRIMARY KEY AUTOINCREMENT,' +
    ' shipment_id INTEGER NOT NULL,' +
    ' product_id INTEGER NOT NULL,' +
    ' qty INTEGER NOT NULL' +
    ');';
  Clomosy.DBSQLiteQuery.OpenOrExecute;
}

// ürünleri Ad [stok] olarak dolduracak
void LoadProductsToCombo;
var Qry : TClSQLiteQuery; name, stokStr : String;
{
  cmbUrun.Items.Clear;
  Qry = Clomosy.DBSQLiteQueryWith(
    'SELECT urunAdi, COALESCE(urunMiktari,0) AS stok ' +
    'FROM products WHERE userID = ' + IntToStr(g_currentUserIDforFleet) + ' ORDER BY urunAdi');
  if (Qry == null) { Exit; }
  Qry.OpenOrExecute;
  while (not Qry.Eof)
  {
    name    = Qry.FieldByName('urunAdi').AsString;
    stokStr = Qry.FieldByName('stok').AsString;
    cmbUrun.AddItem(name + ' [' + stokStr + ']', '');
    Qry.Next;
  }
  if (cmbUrun.Items.Count > 0) cmbUrun.ItemIndex = 0 else cmbUrun.ItemIndex = -1;
}

// Filtreli doldururken de "Ad [stok]" yazacak
void FilterProductComboByPrefix(prefix: String);
var 
Q : TClSQLiteQuery;
whereStr, name, stokStr : String;
{
  if (prefix == '')
  {
    whereStr = '';
  }
  else
  {
    whereStr = ' AND UPPER(urunAdi) LIKE UPPER(' + QuotedStr(prefix + '%') + ') ';
  }

  cmbUrun.Items.Clear;

  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT urunAdi, COALESCE(urunMiktari,0) AS stok FROM products WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
    whereStr + ' ORDER BY urunAdi');
  if (Q == null) Exit;

  Q.OpenOrExecute;
  while (not Q.Eof)
  {
    name    = Q.FieldByName('urunAdi').AsString;
    stokStr = Q.FieldByName('stok').AsString;
    cmbUrun.AddItem(name + ' [' + stokStr + ']', '');
    Q.Next;
  }

  if (cmbUrun.Items.Count > 0) cmbUrun.ItemIndex = 0 else cmbUrun.ItemIndex = -1;
}

void OnUrunAraChange;
{
  FleetDB_ConnectEnsure;
  FilterProductComboByPrefix(Trim(edtUrunAra.Text));
}

// seçtiğim kart bilgilerine göre formu otomatik doldurma
void OnCardPick;
var
  btn : TClProButton;
  sid, plate, company, feeStr, receiver, dest, qtyStr, prodName, s : String;
  productID, i, p : Integer;
  Q, Q2 : TClSQLiteQuery;
{
  btn = TClProButton(uGoToFleetUnit.ClSender);
  if (btn == null) { ShowMessage('Tıklanan buton algılanamadı.'); Exit; }

  sid = btn.Hint;
  if (sid == '') { ShowMessage('Kart ID (Hint) boş.'); Exit; }

  selectedShipmentID = StrToInt(sid);

  FleetDB_ConnectEnsure;

  if (edtUrunAra <> null) edtUrunAra.Text = '';
  FilterProductComboByPrefix('');

  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT s.plate, s.company, s.fee, s.receiver, s.destination,'+
    '       si.product_id, si.qty '+
    'FROM shipments s LEFT JOIN shipment_items si ON si.shipment_id = s.id '+
    'WHERE s.id = ' + sid + ' LIMIT 1');
  if (Q == null) { ShowMessage('Sorgu null: OnCardPick'); Exit; }
  Q.OpenOrExecute;
  if (Q.RecordCount == 0) { ShowMessage('Kayıt bulunamadı.'); Exit; }

  plate     = Q.FieldByName('plate').AsString;
  company   = Q.FieldByName('company').AsString;
  feeStr    = Q.FieldByName('fee').AsString;
  receiver  = Q.FieldByName('receiver').AsString;
  dest      = Q.FieldByName('destination').AsString;
  qtyStr    = Q.FieldByName('qty').AsString;

  edtPlaka.Text  = plate;
  edtSirket.Text = company;
  edtUcret.Text  = feeStr;
  edtAlici.Text  = receiver;
  edtHedef.Text  = dest;
  edtMiktar.Text = qtyStr;

  productID = 0;
  if (Q.FieldByName('product_id').AsString <> '')
    productID = StrToInt(Q.FieldByName('product_id').AsString);

  if (productID > 0)
  {
    Q2 = Clomosy.DBSQLiteQueryWith('SELECT urunAdi FROM products WHERE urunID = ' + IntToStr(productID) + ' LIMIT 1');
    if (Q2 <> null)
    {
      Q2.OpenOrExecute;
      if (Q2.RecordCount > 0)
      {
        prodName = Q2.FieldByName('urunAdi').AsString;
        for (i = 0 to (cmbUrun.Items.Count - 1))
        {
          s = cmbUrun.Items[i];
          p = Pos(' [', s);
          if (p > 0) s = Copy(s, 1, p-1); // "Ad [stok]" -> "Ad"
          if (s == prodName) { cmbUrun.ItemIndex = i; break; }
        }
      }
    }
  }
}

void BuildActiveShipmentCards;
var
  Q          : TClSQLiteQuery;
  card       : TClProPanel;
  img        : TClProImage;
  cap        : TClProLabel;
  selectBtn  : TClProButton;
  sid, ver, sbName, oldSbName : String;
  oldSb      : TClHorzScrollBox;
{
  FleetDB_ConnectEnsure;

  if (cardsVersion > 0)
  {
    oldSbName = 'truckCardsBox_v' + IntToStr(cardsVersion);
    oldSb = TClHorzScrollBox(uGoToFleetUnit.clFindComponent(oldSbName));
    if (oldSb <> null) { oldSb.Visible = False; }
  }

  cardsVersion = cardsVersion + 1;
  ver    = 'v' + IntToStr(cardsVersion) + '_';
  sbName = 'truckCardsBox_v' + IntToStr(cardsVersion);

  horzBox = uGoToFleetUnit.AddNewHorzScrollBox(topHostPanel, sbName);
  horzBox.Align = alClient;
  horzBox.Margins.Left  = 8;
  horzBox.Margins.Right = 8;
  horzBox.ShowScrollBars = True;

  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT id, plate, COALESCE(company, '''') AS company ' +
    'FROM shipments ' +
    'WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
    ' AND status = ''Pending'' ' +
    'ORDER BY id DESC');
  Q.OpenOrExecute;

  while (not Q.Eof)
  {
    sid = Q.FieldByName('id').AsString;

    card = uGoToFleetUnit.AddNewProPanel(horzBox, ver + 'card_' + sid);
    card.Align = alLeft;
    card.Width = 196; card.Height = 150;
    card.Margins.Left = 6; card.Margins.Right = 6;
    card.clProSettings.RoundWidth = 12;
    card.clProSettings.RoundHeight = 12;
    card.clProSettings.BorderWidth = 1;
    card.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
    card.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
    card.SetclProSettings(card.clProSettings);

    img = uGoToFleetUnit.AddNewProImage(card, ver + 'truckImg_' + sid);
    img.Align = alTop; img.Height = 84;
    img.clProSettings.PictureSource  = 'https://thumbs.dreamstime.com/b/freight-truck-road-9056387.jpg';
    img.clProSettings.PictureAutoFit = True;
    img.SetclProSettings(img.clProSettings);

    cap = uGoToFleetUnit.AddNewProLabel(card, ver + 'cap_' + sid,
          Q.FieldByName('plate').AsString + ' — ' + Q.FieldByName('company').AsString);
    cap.Align = alClient;
    cap.clProSettings.FontSize = 12;
    cap.clProSettings.FontHorzAlign = palcenter;
    cap.clProSettings.FontVertAlign = palcenter;
    cap.SetclProSettings(cap.clProSettings);

    selectBtn = uGoToFleetUnit.AddNewProButton(card, ver + 'btnPick_' + sid, 'Seç');
    selectBtn.Align = alBottom;
    selectBtn.Height = 30;
    selectBtn.Hint = sid;
    selectBtn.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#007BFF');
    selectBtn.clProSettings.FontColor       = clAlphaColor.clHexToColor('#FFFFFF');
    selectBtn.clProSettings.BorderWidth     = 0;
    selectBtn.clProSettings.RoundWidth = 10;
    selectBtn.clProSettings.RoundHeight = 10;
    selectBtn.SetclProSettings(selectBtn.clProSettings);
    uGoToFleetUnit.AddNewEvent(selectBtn, tbeOnClick, 'OnCardPick');

    Q.Next;
  }
}

// [] öncesini almaya yarar Addan
function GetSelectedProductID: Integer;
var Q : TClSQLiteQuery; prodName, resIDStr : String; p: Integer;
{
  Result = 0;
  if (cmbUrun.ItemIndex < 0) Exit;

  prodName = cmbUrun.Items[cmbUrun.ItemIndex];
  p = Pos(' [', prodName);
  if (p > 0) prodName = Copy(prodName, 1, p-1); // "Ad [123]" -> "Ad"

  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT urunID FROM products WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
    ' AND urunAdi = ' + QuotedStr(prodName) + ' LIMIT 1');
  if (Q == null) { Exit; }

  Q.OpenOrExecute;
  if (Q.RecordCount > 0)
  {
    resIDStr = Q.FieldByName('urunID').AsString;
    if (resIDStr <> '') Result = StrToInt(resIDStr);
  }
}

//stok kontrolü yapılır
function HasEnoughStock(productID, wantQty: Integer): Boolean;
var Q : TClSQLiteQuery; curStr : String; cur : Integer;
{
  Result = False;
  cur = 0;
  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT urunMiktari AS cur FROM products WHERE urunID = ' + IntToStr(productID) +
    ' AND userID = ' + IntToStr(g_currentUserIDforFleet));
  if (Q == null) { Exit; }
  Q.OpenOrExecute;
  if (Q.RecordCount > 0)
  {
    curStr = Q.FieldByName('cur').AsString;
    if (curStr <> '') cur = StrToInt(curStr);
  }
  if (cur >= wantQty) Result = True;
}

//formu temizler
void ClearForm;
{
  if (edtUrunAra <> null) edtUrunAra.Text = '';
  cmbUrun.ItemIndex = -1;
  edtMiktar.Text = '';
  edtAlici.Text  = '';
  edtHedef.Text  = '';
  edtPlaka.Text  = '';
  edtSirket.Text = '';
  edtUcret.Text  = '';
  selectedShipmentID = 0;
}

void RefreshAll;
{
  try
    FleetDB_ConnectEnsure;
    LoadProductsToCombo;
    if (edtUrunAra <> null)
      FilterProductComboByPrefix(Trim(edtUrunAra.Text));
    BuildActiveShipmentCards;
  except
    ShowMessage('Yenileme hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void OnYeniSevkiyatClick;
var
  productID, qty, feeVal : Integer;
  qtyStr, plate, company, feeStr, receiver, dest : String;
  newShipID : String;
  Q, QBusy  : TClSQLiteQuery;
  cntStr : String; cnt : Integer;
{
  if (cmbUrun.ItemIndex < 0) { ShowMessage('Ürün seçiniz.'); Exit; }
  qtyStr = Trim(edtMiktar.Text);
  if (qtyStr == '') { ShowMessage('Miktar giriniz.'); Exit; }
  qty = StrToInt(qtyStr);
  if (qty <= 0) { ShowMessage('Miktar 0 olamaz.'); Exit; }

  plate = Trim(edtPlaka.Text);
  if (plate == '') { ShowMessage('Plaka giriniz.'); Exit; }

  company = Trim(edtSirket.Text);
  feeStr  = Trim(edtUcret.Text);
  receiver= Trim(edtAlici.Text);
  dest    = Trim(edtHedef.Text);
  if (feeStr == '') feeVal = 0; else feeVal = StrToInt(feeStr);

  productID = GetSelectedProductID;
  if (productID <= 0) { ShowMessage('Ürün bulunamadı.'); Exit; }
  if (not HasEnoughStock(productID, qty)) { ShowMessage('Yetersiz stok.'); Exit; }

  try
    FleetDB_ConnectEnsure;

    QBusy = Clomosy.DBSQLiteQueryWith(
      'SELECT COUNT(*) AS cnt FROM shipments ' +
      'WHERE userID = ' + IntToStr(g_currentUserIDforFleet) + ' ' +
      'AND status = ' + QuotedStr('Pending') + ' ' +
      'AND plate = ' + QuotedStr(plate));
    if (QBusy == null) { ShowMessage('Sorgu null: Pending plaka kontrolü'); Exit; }
    QBusy.OpenOrExecute;
    cntStr = QBusy.FieldByName('cnt').AsString; if (cntStr == '') cnt = 0 else cnt = StrToInt(cntStr);
    if (cnt > 0) { ShowMessage('Bu plakaya ait açık (Pending) sevkiyat zaten var.'); Exit; }

    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO shipments (userID, plate, company, fee, receiver, destination, status, created_at, delivered_at) VALUES (' +
      IntToStr(g_currentUserIDforFleet) + ', ' +
      QuotedStr(plate) + ', ' +
      QuotedStr(company) + ', ' +
      IntToStr(feeVal) + ', ' +
      QuotedStr(receiver) + ', ' +
      QuotedStr(dest) + ', ' +
      QuotedStr('Pending') + ', ' +
      'datetime(''now''), ' +
      'NULL)';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    Q = Clomosy.DBSQLiteQueryWith('SELECT MAX(id) AS sid FROM shipments WHERE userID = ' + IntToStr(g_currentUserIDforFleet));
    if (Q == null) { ShowMessage('Sorgu null döndü: MAX(id)'); Exit; }
    Q.OpenOrExecute;
    newShipID = Q.FieldByName('sid').AsString;

    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO shipment_items (shipment_id, product_id, qty) VALUES (' +
      newShipID + ', ' + IntToStr(productID) + ', ' + IntToStr(qty) + ')';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    Clomosy.DBSQLiteQuery.Sql.Text =
      'UPDATE products SET urunMiktari = urunMiktari - ' + IntToStr(qty) +
      ' WHERE urunID = ' + IntToStr(productID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    ShowMessage('Sevkiyat oluşturuldu.');
    ClearForm;
    RefreshAll;
  except
    ShowMessage('Kayıt hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void OnDuzenleClick;
var
  shipIDStr : String;
  oldProdID, oldQty : Integer;
  newProdID, newQty : Integer;
  qtyStr, plate, company, feeStr, receiver, dest : String;
  feeVal : Integer;
  Q      : TClSQLiteQuery;
{
  if (cmbUrun.ItemIndex < 0) { ShowMessage('Ürün seçiniz.'); Exit; }
  qtyStr = Trim(edtMiktar.Text);
  if (qtyStr == '') { ShowMessage('Miktar giriniz.'); Exit; }
  newQty = StrToInt(qtyStr);
  if (newQty <= 0) { ShowMessage('Miktar 0 olamaz.'); Exit; }

  plate   = Trim(edtPlaka.Text);
  company = Trim(edtSirket.Text);
  feeStr  = Trim(edtUcret.Text);
  receiver= Trim(edtAlici.Text);
  dest    = Trim(edtHedef.Text);
  if (feeStr == '') feeVal = 0; else feeVal = StrToInt(feeStr);

  newProdID = GetSelectedProductID;
  if (newProdID <= 0) { ShowMessage('Ürün bulunamadı.'); Exit; }

  try
    FleetDB_ConnectEnsure;

    if (selectedShipmentID > 0)
      shipIDStr = IntToStr(selectedShipmentID);
    else
    {
      if (plate == '') { ShowMessage('Kart seçin ya da plaka girin.'); Exit; }
      Q = Clomosy.DBSQLiteQueryWith(
        'SELECT id FROM shipments WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
        ' AND status = ''Pending'' ' +
        ' AND plate = ' + QuotedStr(plate) +
        ' AND company = ' + QuotedStr(company) +
        ' ORDER BY id DESC LIMIT 1');
      if (Q == null) { ShowMessage('Sorgu null döndü: select'); Exit; }
      Q.OpenOrExecute;
      if (Q.RecordCount == 0) { ShowMessage('Düzenlenecek Pending sevkiyat bulunamadı.'); Exit; }
      shipIDStr = Q.FieldByName('id').AsString;
    }

    Q = Clomosy.DBSQLiteQueryWith(
      'SELECT product_id AS pid, qty FROM shipment_items WHERE shipment_id = ' + shipIDStr + ' LIMIT 1');
    if (Q == null) { ShowMessage('Sorgu null: shipment_items'); Exit; }
    Q.OpenOrExecute;

    if (Q.RecordCount == 0)
    {
      if (not HasEnoughStock(newProdID, newQty)) { ShowMessage('Yetersiz stok.'); Exit; }
      Clomosy.DBSQLiteQuery.Sql.Text =
        'INSERT INTO shipment_items (shipment_id, product_id, qty) VALUES (' +
        shipIDStr + ', ' + IntToStr(newProdID) + ', ' + IntToStr(newQty) + ')';
      Clomosy.DBSQLiteQuery.OpenOrExecute;

      Clomosy.DBSQLiteQuery.Sql.Text =
        'UPDATE products SET urunMiktari = urunMiktari - ' + IntToStr(newQty) +
        ' WHERE urunID = ' + IntToStr(newProdID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
      Clomosy.DBSQLiteQuery.OpenOrExecute;
    }
    else
    {
      oldProdID = StrToIntDef(Q.FieldByName('pid').AsString,0);
      oldQty    = StrToIntDef(Q.FieldByName('qty').AsString,0);

      if (oldProdID == newProdID)
      {
        if (newQty > oldQty)
        {
          if (not HasEnoughStock(newProdID, newQty - oldQty)) { ShowMessage('Yetersiz stok.'); Exit; }
          Clomosy.DBSQLiteQuery.Sql.Text =
            'UPDATE products SET urunMiktari = urunMiktari - ' + IntToStr(newQty - oldQty) +
            ' WHERE urunID = ' + IntToStr(newProdID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
          Clomosy.DBSQLiteQuery.OpenOrExecute;
        }
        else if (newQty < oldQty)
        {
          Clomosy.DBSQLiteQuery.Sql.Text =
            'UPDATE products SET urunMiktari = urunMiktari + ' + IntToStr(oldQty - newQty) +
            ' WHERE urunID = ' + IntToStr(newProdID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
          Clomosy.DBSQLiteQuery.OpenOrExecute;
        }
      }
      else
      {
        if (oldProdID > 0) {
          Clomosy.DBSQLiteQuery.Sql.Text =
            'UPDATE products SET urunMiktari = urunMiktari + ' + IntToStr(oldQty) +
            ' WHERE urunID = ' + IntToStr(oldProdID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
          Clomosy.DBSQLiteQuery.OpenOrExecute;
        }
        if (not HasEnoughStock(newProdID, newQty)) { ShowMessage('Yeni ürün için stok yetersiz.'); Exit; }
        Clomosy.DBSQLiteQuery.Sql.Text =
          'UPDATE products SET urunMiktari = urunMiktari - ' + IntToStr(newQty) +
          ' WHERE urunID = ' + IntToStr(newProdID) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
        Clomosy.DBSQLiteQuery.OpenOrExecute;
      }

      Clomosy.DBSQLiteQuery.Sql.Text =
        'UPDATE shipment_items SET product_id = ' + IntToStr(newProdID) +
        ', qty = ' + IntToStr(newQty) +
        ' WHERE shipment_id = ' + shipIDStr;
      Clomosy.DBSQLiteQuery.OpenOrExecute;
    }

    Clomosy.DBSQLiteQuery.Sql.Text =
      'UPDATE shipments SET plate = ' + QuotedStr(plate) +
      ', company = ' + QuotedStr(company) +
      ', fee = ' + IntToStr(feeVal) +
      ', receiver = ' + QuotedStr(receiver) +
      ', destination = ' + QuotedStr(dest) +
      ' WHERE id = ' + shipIDStr;
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    ShowMessage('Sevkiyat güncellendi.');
    ClearForm;
    RefreshAll;
  except
    ShowMessage('Düzenleme hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void OnSilClick;
var
  plate, company, shipIDStr, statusStr, curCardName : String;
  Q, QItems : TClSQLiteQuery;
  curCard   : TClProPanel;
  pidStr, qtyStr : String;
  pid, qty : Integer;
{
  plate   = Trim(edtPlaka.Text);
  company = Trim(edtSirket.Text);

  try
    FleetDB_ConnectEnsure;

    if (selectedShipmentID > 0)
      shipIDStr = IntToStr(selectedShipmentID);
    else
    {
      if (plate == '') { ShowMessage('Silmek için kart seçin ya da plaka girin.'); Exit; }
      Q = Clomosy.DBSQLiteQueryWith(
        'SELECT id, status FROM shipments WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
        ' AND plate = ' + QuotedStr(plate) +
        ' AND company = ' + QuotedStr(company) +
        ' ORDER BY id DESC LIMIT 1');
      if (Q == null) { ShowMessage('Sorgu null: select'); Exit; }
      Q.OpenOrExecute;
      if (Q.RecordCount == 0) { ShowMessage('Sevkiyat bulunamadı.'); Exit; }
      shipIDStr  = Q.FieldByName('id').AsString;
      statusStr  = Q.FieldByName('status').AsString;
    }

    if (statusStr == '')
    {
      Q = Clomosy.DBSQLiteQueryWith('SELECT status FROM shipments WHERE id = ' + shipIDStr + ' LIMIT 1');
      Q.OpenOrExecute;
      statusStr = Q.FieldByName('status').AsString;
    }
    if (statusStr == 'Delivered') { ShowMessage('Teslim edilmiş sevkiyat silinemez.'); Exit; }

    QItems = Clomosy.DBSQLiteQueryWith('SELECT product_id, qty FROM shipment_items WHERE shipment_id = ' + shipIDStr);
    if (QItems <> null)
    {
      QItems.OpenOrExecute;
      while (not QItems.Eof)
      {
        pidStr = QItems.FieldByName('product_id').AsString;
        qtyStr = QItems.FieldByName('qty').AsString;
        if ((pidStr <> '') && (qtyStr <> ''))
        {
          pid = StrToInt(pidStr); qty = StrToInt(qtyStr);
          Clomosy.DBSQLiteQuery.Sql.Text =
            'UPDATE products SET urunMiktari = urunMiktari + ' + IntToStr(qty) +
            ' WHERE urunID = ' + IntToStr(pid) + ' AND userID = ' + IntToStr(g_currentUserIDforFleet);
          Clomosy.DBSQLiteQuery.OpenOrExecute;
        }
        QItems.Next;
      }
    }

    Clomosy.DBSQLiteQuery.Sql.Text = 'DELETE FROM shipment_items WHERE shipment_id = ' + shipIDStr;
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    Clomosy.DBSQLiteQuery.Sql.Text = 'DELETE FROM shipments WHERE id = ' + shipIDStr;
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    curCardName = 'v' + IntToStr(cardsVersion) + '_card_' + shipIDStr;
    curCard = TClProPanel(uGoToFleetUnit.clFindComponent(curCardName));
    if (curCard <> null) { curCard.Visible = False; }

    ClearForm;
    RefreshAll;
    ShowMessage('Sevkiyat silindi.');
  except
    ShowMessage('Silme hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void OnTeslimEdildiClick;
var
  plate, company, shipIDStr, curCardName : String;
  Q : TClSQLiteQuery; curCard : TClProPanel;
{
  plate   = Trim(edtPlaka.Text);
  company = Trim(edtSirket.Text);

  try
    FleetDB_ConnectEnsure;

    if (selectedShipmentID > 0)
      shipIDStr = IntToStr(selectedShipmentID);
    else
    {
      if (plate == '') { ShowMessage('Plaka giriniz ya da kart seçiniz.'); Exit; }

      Q = Clomosy.DBSQLiteQueryWith(
        'SELECT id FROM shipments WHERE userID = ' + IntToStr(g_currentUserIDforFleet) +
        ' AND status = ''Pending'' ' +
        ' AND plate = ' + QuotedStr(plate) +
        ' AND company = ' + QuotedStr(company) +
        ' ORDER BY id DESC LIMIT 1');
      if (Q == null) { ShowMessage('Sorgu null döndü: select'); Exit; }
      Q.OpenOrExecute;

      if (Q.RecordCount == 0) { ShowMessage('Uygun Pending sevkiyat bulunamadı.'); Exit; }
      shipIDStr = Q.FieldByName('id').AsString;
    }

    curCardName = 'v' + IntToStr(cardsVersion) + '_card_' + shipIDStr;
    curCard = TClProPanel(uGoToFleetUnit.clFindComponent(curCardName));
    if (curCard <> null) { curCard.Visible = False; }

    Clomosy.DBSQLiteQuery.Sql.Text =
      'UPDATE shipments SET status = ''Delivered'', delivered_at = datetime(''now'') WHERE id = ' + shipIDStr;
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    ClearForm;
    RefreshAll;
    ShowMessage('Sevkiyat teslim edildi olarak işaretlendi.');
  except
    ShowMessage('Güncelleme hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

//Windows Tasarımım
void CreateFleetUI;
var
  lytTruck, rowPlaka, rowSirket, rowUcret           : TClLayout;
  lytShip, rowTop, colLeft, colRight                : TClLayout;
  lytSearch, lytUrun, lytMiktar                     : TClLayout;
  rowBottom, colAliciL, colHedefR                   : TClLayout;
  headerLeftHost, stockHost, homeHost               : TClProPanel;
  W_LEFT, W_COL, SIDE_W                             : Integer;
{
  W_LEFT = 420;
  W_COL  = 520;
  SIDE_W = 220;

  rootPanel = uGoToFleetUnit.AddNewProPanel(uGoToFleetUnit, 'rootPanel');
  rootPanel.Align = alClient;
  rootPanel.Margins.Left = 10;  rootPanel.Margins.Right = 10;
  rootPanel.Margins.Top  = 10;  rootPanel.Margins.Bottom = 10;
  rootPanel.clProSettings.RoundWidth  = 15;
  rootPanel.clProSettings.RoundHeight = 15;
  rootPanel.clProSettings.BorderWidth = 1;
  rootPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  rootPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  rootPanel.SetclProSettings(rootPanel.clProSettings);

  headerPanel = uGoToFleetUnit.AddNewProPanel(rootPanel, 'headerPanel');
  headerPanel.Align = alTop; headerPanel.Height = 56;
  headerPanel.Margins.Left = 5; headerPanel.Margins.Top = 5;
  headerPanel.Margins.Right = 5; headerPanel.Margins.Bottom = 0;
  headerPanel.clProSettings.BorderWidth = 1;
  headerPanel.clProSettings.RoundWidth  = 12;
  headerPanel.clProSettings.RoundHeight = 12;
  headerPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  headerPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  headerPanel.SetclProSettings(headerPanel.clProSettings);

  headerLeftHost = uGoToFleetUnit.AddNewProPanel(headerPanel, 'headerLeftHost');
  headerLeftHost.Align = alLeft; headerLeftHost.Width = SIDE_W;
  headerLeftHost.clProSettings.IsTransparent = True;
  headerLeftHost.SetclProSettings(headerLeftHost.clProSettings);

  stockHost = uGoToFleetUnit.AddNewProPanel(headerLeftHost, 'stockHost');
  stockHost.Align = alLeft; stockHost.Width = 68;
  stockHost.Margins.Left = 8; stockHost.Margins.Right = 6;
  stockHost.clProSettings.IsTransparent = True;
  stockHost.SetclProSettings(stockHost.clProSettings);

  tabStock = uGoToFleetUnit.AddNewProLabel(stockHost, 'tabStock', 'Stok');
  tabStock.Align = alClient;
  tabStock.clProSettings.FontSize = 18;
  tabStock.clProSettings.FontColor = clAlphaColor.clHexToColor('#007BFF');
  tabStock.clProSettings.FontVertAlign = palcenter;
  tabStock.clProSettings.FontHorzAlign = palcenter;
  tabStock.SetclProSettings(tabStock.clProSettings);
 
  uGoToFleetUnit.AddNewEvent(tabStock, tbeOnClick, 'OnGoStockClick');
  uGoToFleetUnit.AddNewEvent(stockHost, tbeOnClick, 'OnGoStockClick');

  homeHost = uGoToFleetUnit.AddNewProPanel(headerLeftHost, 'homeHost');
  homeHost.Align = alLeft; homeHost.Width = 120; 
  homeHost.Margins.Left = 0; homeHost.Margins.Right = 0;
  homeHost.clProSettings.IsTransparent = True;
  homeHost.SetclProSettings(homeHost.clProSettings);

  tabHome = uGoToFleetUnit.AddNewProLabel(homeHost, 'tabHome', 'Ana Sayfa');
  tabHome.Align = alClient; 
  tabHome.clProSettings.FontSize = 18;
  tabHome.clProSettings.FontColor = clAlphaColor.clHexToColor('#6C757D');
  tabHome.clProSettings.FontVertAlign = palcenter;
  tabHome.clProSettings.FontHorzAlign = palcenter;
  tabHome.SetclProSettings(tabHome.clProSettings);
 
  uGoToFleetUnit.AddNewEvent(tabHome,  tbeOnClick, 'OnGoHomeClick');
  uGoToFleetUnit.AddNewEvent(homeHost, tbeOnClick, 'OnGoHomeClick');

  titleLabel = uGoToFleetUnit.AddNewProLabel(headerPanel, 'titleLabel', 'Sevkiyat');
  titleLabel.Align = alClient;
  titleLabel.clProSettings.FontSize = 18;
  titleLabel.clProSettings.FontHorzAlign = palcenter;
  titleLabel.clProSettings.FontVertAlign = palcenter;
  titleLabel.SetclProSettings(titleLabel.clProSettings);

  headerRightHost = uGoToFleetUnit.AddNewProPanel(headerPanel, 'headerRightHost');
  headerRightHost.Align = alRight; headerRightHost.Width = SIDE_W;
  headerRightHost.clProSettings.IsTransparent = True;
  headerRightHost.SetclProSettings(headerRightHost.clProSettings);

  btnYenile = uGoToFleetUnit.AddNewProButton(headerRightHost, 'btnYenile', '');
  btnYenile.Align = alRight; btnYenile.Width = 44; btnYenile.Height = 44;
  btnYenile.Margins.Left = 6; btnYenile.Margins.Top = 6;
  btnYenile.Margins.Right = 6; btnYenile.Margins.Bottom = 6;
  btnYenile.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  btnYenile.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#E0E0E0');
  btnYenile.clProSettings.BorderWidth     = 1;
  btnYenile.clProSettings.RoundWidth = 10; btnYenile.clProSettings.RoundHeight = 10;
  btnYenile.SetclProSettings(btnYenile.clProSettings);

  imgRefresh = uGoToFleetUnit.AddNewProImage(btnYenile, 'imgRefresh');
  imgRefresh.Align = alClient;
  imgRefresh.Margins.Left = 8; imgRefresh.Margins.Top = 8;
  imgRefresh.Margins.Right = 8; imgRefresh.Margins.Bottom = 8;
  imgRefresh.clProSettings.PictureSource  = 'https://backgroundsy.com/wp-content/uploads/large/refresh-icon.jpg';
  imgRefresh.clProSettings.PictureAutoFit = True;
  imgRefresh.SetclProSettings(imgRefresh.clProSettings);

  topHostPanel = uGoToFleetUnit.AddNewProPanel(rootPanel, 'topHostPanel');
  topHostPanel.Align = alTop; topHostPanel.Height = 160;
  topHostPanel.Margins.Top = 6;
  topHostPanel.clProSettings.RoundWidth = 12; topHostPanel.clProSettings.RoundHeight = 12;
  topHostPanel.clProSettings.BorderWidth = 1;
  topHostPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  topHostPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  topHostPanel.SetclProSettings(topHostPanel.clProSettings);

  bottomScroll = uGoToFleetUnit.AddNewVertScrollBox(rootPanel, 'bottomScroll');
  bottomScroll.Align = alClient; bottomScroll.Margins.Top = 8; bottomScroll.Margins.Bottom = 2;
  bottomScroll.ShowScrollBars = True;

  actionsPanel = uGoToFleetUnit.AddNewProPanel(bottomScroll, 'actionsPanel');
  actionsPanel.Align = alTop; actionsPanel.Height = 58;
  actionsPanel.Margins.Left = 8; actionsPanel.Margins.Top = 8;
  actionsPanel.Margins.Right = 8; actionsPanel.Margins.Bottom = 0;
  actionsPanel.clProSettings.IsTransparent = True;
  actionsPanel.SetclProSettings(actionsPanel.clProSettings);

  btnYeniSevkiyat = uGoToFleetUnit.AddNewProButton(actionsPanel, 'btnYeniSevkiyat', 'Yeni Sevkiyat');
  btnYeniSevkiyat.Align = alLeft; btnYeniSevkiyat.Width = 200; btnYeniSevkiyat.Height = 44;
  btnYeniSevkiyat.Margins.Left = 6; btnYeniSevkiyat.Margins.Top = 6; btnYeniSevkiyat.Margins.Bottom = 6;
  btnYeniSevkiyat.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#007BFF');
  btnYeniSevkiyat.clProSettings.FontColor       = clAlphaColor.clHexToColor('#FFFFFF');
  btnYeniSevkiyat.clProSettings.BorderWidth     = 0;
  btnYeniSevkiyat.clProSettings.RoundWidth = 12; btnYeniSevkiyat.clProSettings.RoundHeight = 12;
  btnYeniSevkiyat.SetclProSettings(btnYeniSevkiyat.clProSettings);

  btnTeslimEdildi = uGoToFleetUnit.AddNewProButton(actionsPanel, 'btnTeslimEdildi', 'Teslim Edildi');
  btnTeslimEdildi.Align = alLeft; btnTeslimEdildi.Width = 200; btnTeslimEdildi.Height = 44;
  btnTeslimEdildi.Margins.Left = 10; btnTeslimEdildi.Margins.Top = 6; btnTeslimEdildi.Margins.Bottom = 6;
  btnTeslimEdildi.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnTeslimEdildi.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnTeslimEdildi.clProSettings.BorderWidth     = 2;
  btnTeslimEdildi.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnTeslimEdildi.clProSettings.RoundWidth = 12; btnTeslimEdildi.clProSettings.RoundHeight = 12;
  btnTeslimEdildi.SetclProSettings(btnTeslimEdildi.clProSettings);

  btnDuzenle = uGoToFleetUnit.AddNewProButton(actionsPanel, 'btnDuzenle', 'Düzenle');
  btnDuzenle.Align = alLeft; btnDuzenle.Width = 160; btnDuzenle.Height = 44;
  btnDuzenle.Margins.Left = 10; btnDuzenle.Margins.Top = 6; btnDuzenle.Margins.Bottom = 6;
  btnDuzenle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnDuzenle.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnDuzenle.clProSettings.BorderWidth     = 2;
  btnDuzenle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnDuzenle.clProSettings.RoundWidth = 12; btnDuzenle.clProSettings.RoundHeight = 12;
  btnDuzenle.SetclProSettings(btnDuzenle.clProSettings);

  btnSil = uGoToFleetUnit.AddNewProButton(actionsPanel, 'btnSil', 'Sil');
  btnSil.Align = alLeft; btnSil.Width = 120; btnSil.Height = 44;
  btnSil.Margins.Left = 10; btnSil.Margins.Top = 6; btnSil.Margins.Bottom = 6;
  btnSil.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnSil.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#DC3545');
  btnSil.clProSettings.BorderWidth     = 2;
  btnSil.clProSettings.FontColor       = clAlphaColor.clHexToColor('#DC3545');
  btnSil.clProSettings.RoundWidth = 12; btnSil.clProSettings.RoundHeight = 12;
  btnSil.SetclProSettings(btnSil.clProSettings);

  formsHost = uGoToFleetUnit.AddNewProPanel(bottomScroll, 'formsHost');
  formsHost.Align = alClient;
  formsHost.Margins.Left = 8; formsHost.Margins.Right = 8;
  formsHost.Margins.Top  = 8; formsHost.Margins.Bottom = 8;
  formsHost.clProSettings.IsTransparent = True;
  formsHost.SetclProSettings(formsHost.clProSettings);

  truckPanel = uGoToFleetUnit.AddNewProPanel(formsHost, 'truckPanel');
  truckPanel.Align = alLeft; truckPanel.Width = W_LEFT;
  truckPanel.Margins.Left = 0; truckPanel.Margins.Right = 10;
  truckPanel.clProSettings.BorderWidth = 1;
  truckPanel.clProSettings.RoundWidth  = 12;
  truckPanel.clProSettings.RoundHeight = 12;
  truckPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  truckPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  truckPanel.SetclProSettings(truckPanel.clProSettings);

  lytTruck = uGoToFleetUnit.AddNewLayout(truckPanel, 'lytTruck');
  lytTruck.Align = alClient;

  rowPlaka = uGoToFleetUnit.AddNewLayout(lytTruck, 'rowPlaka');
  rowPlaka.Align = alTop; rowPlaka.Height = 70;

  lblPlaka = uGoToFleetUnit.AddNewProLabel(rowPlaka, 'lblPlaka', 'Tır Plakası');
  lblPlaka.Align = alTop; lblPlaka.Height = 20;

  edtPlaka = uGoToFleetUnit.AddNewProEdit(rowPlaka, 'edtPlaka', '');
  edtPlaka.Align = alTop; edtPlaka.Height = 36; edtPlaka.Margins.Top = 6;
  edtPlaka.clProSettings.RoundWidth=10; edtPlaka.clProSettings.RoundHeight=10;
  edtPlaka.clProSettings.BorderWidth=2; edtPlaka.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtPlaka.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtPlaka.SetclProSettings(edtPlaka.clProSettings);

  rowSirket = uGoToFleetUnit.AddNewLayout(lytTruck, 'rowSirket');
  rowSirket.Align = alTop; rowSirket.Height = 70; rowSirket.Margins.Top = 6;

  lblSirket = uGoToFleetUnit.AddNewProLabel(rowSirket, 'lblSirket', 'Tır Şirketi');
  lblSirket.Align = alTop; lblSirket.Height = 20;

  edtSirket = uGoToFleetUnit.AddNewProEdit(rowSirket, 'edtSirket', '');
  edtSirket.Align = alTop; edtSirket.Height = 36; edtSirket.Margins.Top = 6;
  edtSirket.clProSettings.RoundWidth=10; edtSirket.clProSettings.RoundHeight=10;
  edtSirket.clProSettings.BorderWidth=2; edtSirket.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtSirket.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtSirket.SetclProSettings(edtSirket.clProSettings);

  rowUcret = uGoToFleetUnit.AddNewLayout(lytTruck, 'rowUcret');
  rowUcret.Align = alTop; rowUcret.Height = 70; rowUcret.Margins.Top = 6;

  lblUcret = uGoToFleetUnit.AddNewProLabel(rowUcret, 'lblUcret', 'Ücret (₺)');
  lblUcret.Align = alTop; lblUcret.Height = 20;

  edtUcret = uGoToFleetUnit.AddNewProEdit(rowUcret, 'edtUcret', '');
  edtUcret.Align = alTop; edtUcret.Height = 36; edtUcret.Margins.Top = 6;
  edtUcret.clProSettings.RoundWidth=10; edtUcret.clProSettings.RoundHeight=10;
  edtUcret.clProSettings.BorderWidth=2; edtUcret.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtUcret.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtUcret.SetclProSettings(edtUcret.clProSettings);

  shipPanel = uGoToFleetUnit.AddNewProPanel(formsHost, 'shipPanel');
  shipPanel.Align = alClient;
  shipPanel.clProSettings.BorderWidth = 1;
  shipPanel.clProSettings.RoundWidth  = 12;
  shipPanel.clProSettings.RoundHeight = 12;
  shipPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  shipPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  shipPanel.SetclProSettings(shipPanel.clProSettings);

  lytShip = uGoToFleetUnit.AddNewLayout(shipPanel, 'lytShip');
  lytShip.Align = alClient;

  rowTop = uGoToFleetUnit.AddNewLayout(lytShip, 'rowTop');
  rowTop.Align = alTop; rowTop.Height = 132;

  colLeft = uGoToFleetUnit.AddNewLayout(rowTop, 'colLeft');
  colLeft.Align = alLeft; colLeft.Width = W_COL; colLeft.Margins.Right = 12;

  lytSearch = uGoToFleetUnit.AddNewLayout(colLeft, 'lytSearch');
  lytSearch.Align = alTop; lytSearch.Height = 62;

  lblUrunAra = uGoToFleetUnit.AddNewProLabel(lytSearch, 'lblUrunAra', 'Ara...');
  lblUrunAra.Align = alTop; lblUrunAra.Height = 20;

  edtUrunAra = uGoToFleetUnit.AddNewProEdit(lytSearch, 'edtUrunAra', '');
  edtUrunAra.Align = alTop; edtUrunAra.Height = 36; edtUrunAra.Margins.Top = 6;
  edtUrunAra.clProSettings.RoundWidth=10; edtUrunAra.clProSettings.RoundHeight=10;
  edtUrunAra.clProSettings.BorderWidth=2; edtUrunAra.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtUrunAra.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtUrunAra.SetclProSettings(edtUrunAra.clProSettings);

  lytUrun = uGoToFleetUnit.AddNewLayout(colLeft, 'lytUrun');
  lytUrun.Align = alTop; lytUrun.Height = 62; lytUrun.Margins.Top = 6;

  lblUrun = uGoToFleetUnit.AddNewProLabel(lytUrun, 'lblUrun', 'Ürün Seç');
  lblUrun.Align = alTop; lblUrun.Height = 20;

  cmbUrun = uGoToFleetUnit.AddNewComboBox(lytUrun, 'cmbUrun');
  cmbUrun.Align = alTop; cmbUrun.Height = 36; cmbUrun.Margins.Top = 6;

  colRight = uGoToFleetUnit.AddNewLayout(rowTop, 'colRight');
  colRight.Align = alClient;

  lytMiktar = uGoToFleetUnit.AddNewLayout(colRight, 'lytMiktar');
  lytMiktar.Align = alTop; lytMiktar.Height = 62;

  lblMiktar = uGoToFleetUnit.AddNewProLabel(lytMiktar, 'lblMiktar', 'Miktar (Palet)');
  lblMiktar.Align = alTop; lblMiktar.Height = 20;

  edtMiktar = uGoToFleetUnit.AddNewProEdit(lytMiktar, 'edtMiktar', '');
  edtMiktar.Align = alTop; edtMiktar.Height = 36; edtMiktar.Margins.Top = 6;
  edtMiktar.clProSettings.RoundWidth=10; edtMiktar.clProSettings.RoundHeight=10;
  edtMiktar.clProSettings.BorderWidth=2; edtMiktar.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtMiktar.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtMiktar.SetclProSettings(edtMiktar.clProSettings);

  rowBottom = uGoToFleetUnit.AddNewLayout(lytShip, 'rowBottom');
  rowBottom.Align = alTop; rowBottom.Height = 86; rowBottom.Margins.Top = 6;

  colAliciL = uGoToFleetUnit.AddNewLayout(rowBottom, 'colAliciL');
  colAliciL.Align = alLeft; colAliciL.Width = W_COL; colAliciL.Margins.Right = 12;

  lblAlici = uGoToFleetUnit.AddNewProLabel(colAliciL, 'lblAlici', 'Alıcı (Şirket/Kişi)');
  lblAlici.Align = alTop; lblAlici.Height = 20;

  edtAlici = uGoToFleetUnit.AddNewProEdit(colAliciL, 'edtAlici', '');
  edtAlici.Align = alTop; edtAlici.Height = 36; edtAlici.Margins.Top = 6;
  edtAlici.clProSettings.RoundWidth=10; edtAlici.clProSettings.RoundHeight=10;
  edtAlici.clProSettings.BorderWidth=2; edtAlici.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtAlici.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtAlici.SetclProSettings(edtAlici.clProSettings);

  colHedefR = uGoToFleetUnit.AddNewLayout(rowBottom, 'colHedefR');
  colHedefR.Align = alClient;

  lblHedef = uGoToFleetUnit.AddNewProLabel(colHedefR, 'lblHedef', 'Hedef / Varış Yeri');
  lblHedef.Align = alTop; lblHedef.Height = 20;

  edtHedef = uGoToFleetUnit.AddNewProEdit(colHedefR, 'edtHedef', '');
  edtHedef.Align = alTop; edtHedef.Height = 36; edtHedef.Margins.Top = 6;
  edtHedef.clProSettings.RoundWidth=10; edtHedef.clProSettings.RoundHeight=10;
  edtHedef.clProSettings.BorderWidth=2; edtHedef.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtHedef.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtHedef.SetclProSettings(edtHedef.clProSettings);

  uGoToFleetUnit.AddNewEvent(edtUrunAra, tbeOnChange, 'OnUrunAraChange');
}

//Mobil Tasarım
void CreateFleetUIMobile;
var
  lytContainer, row, btnRow : TClLayout;
  headerLeftHost, stockHost, homeHost : TClProPanel;
  availW, BTN_W, SIDE_W : Integer;
{
  SIDE_W = 140;

  rootPanel = uGoToFleetUnit.AddNewProPanel(uGoToFleetUnit, 'rootPanel');
  rootPanel.Align = alClient;
  rootPanel.Margins.Left = 8;  rootPanel.Margins.Right = 8;
  rootPanel.Margins.Top  = 8;  rootPanel.Margins.Bottom = 8;
  rootPanel.clProSettings.RoundWidth  = 12;
  rootPanel.clProSettings.RoundHeight = 12;
  rootPanel.clProSettings.BorderWidth = 1;
  rootPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  rootPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  rootPanel.SetclProSettings(rootPanel.clProSettings);

  headerPanel = uGoToFleetUnit.AddNewProPanel(rootPanel, 'headerPanel');
  headerPanel.Align = alTop; headerPanel.Height = 52;
  headerPanel.Margins.Left = 4; headerPanel.Margins.Right = 4; headerPanel.Margins.Top = 4;
  headerPanel.clProSettings.BorderWidth = 1;
  headerPanel.clProSettings.RoundWidth  = 10;
  headerPanel.clProSettings.RoundHeight = 10;
  headerPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  headerPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  headerPanel.SetclProSettings(headerPanel.clProSettings);

  headerLeftHost = uGoToFleetUnit.AddNewProPanel(headerPanel, 'headerLeftHost_m');
  headerLeftHost.Align = alLeft; headerLeftHost.Width = SIDE_W;
  headerLeftHost.clProSettings.IsTransparent = True;
  headerLeftHost.SetclProSettings(headerLeftHost.clProSettings);

  stockHost = uGoToFleetUnit.AddNewProPanel(headerLeftHost, 'stockHost_m');
  stockHost.Align = alLeft; stockHost.Width = 56;
  stockHost.Margins.Left = 6; stockHost.Margins.Right = 6;
  stockHost.clProSettings.IsTransparent = True;
  stockHost.SetclProSettings(stockHost.clProSettings);

  tabStock = uGoToFleetUnit.AddNewProLabel(stockHost, 'tabStock', 'Stok');
  tabStock.Align = alClient;
  tabStock.clProSettings.FontSize = 16;
  tabStock.clProSettings.FontColor = clAlphaColor.clHexToColor('#007BFF');
  tabStock.clProSettings.FontVertAlign = palcenter;
  tabStock.clProSettings.FontHorzAlign = palcenter;
  tabStock.SetclProSettings(tabStock.clProSettings);
  uGoToFleetUnit.AddNewEvent(tabStock,  tbeOnClick, 'OnGoStockClick');
  uGoToFleetUnit.AddNewEvent(stockHost, tbeOnClick, 'OnGoStockClick');

  homeHost = uGoToFleetUnit.AddNewProPanel(headerLeftHost, 'homeHost_m');
  homeHost.Align = alLeft; homeHost.Width = 84;
  homeHost.Margins.Left = 0; homeHost.Margins.Right = 0;
  homeHost.clProSettings.IsTransparent = True;
  homeHost.SetclProSettings(homeHost.clProSettings);

  tabHome = uGoToFleetUnit.AddNewProLabel(homeHost, 'tabHome', 'Ana Sayfa');
  tabHome.Align = alClient; 
  tabHome.clProSettings.FontSize = 16;
  tabHome.clProSettings.FontColor = clAlphaColor.clHexToColor('#6C757D');
  tabHome.clProSettings.FontVertAlign = palcenter;
  tabHome.clProSettings.FontHorzAlign = palcenter;
  tabHome.SetclProSettings(tabHome.clProSettings);
  uGoToFleetUnit.AddNewEvent(tabHome,  tbeOnClick, 'OnGoHomeClick');
  uGoToFleetUnit.AddNewEvent(homeHost, tbeOnClick, 'OnGoHomeClick');

  titleLabel = uGoToFleetUnit.AddNewProLabel(headerPanel, 'titleLabel', 'Sevkiyat');
  titleLabel.Align = alClient;
  titleLabel.clProSettings.FontSize = 16;
  titleLabel.clProSettings.FontHorzAlign = palcenter;
  titleLabel.clProSettings.FontVertAlign = palcenter;
  titleLabel.SetclProSettings(titleLabel.clProSettings);

  headerRightHost = uGoToFleetUnit.AddNewProPanel(headerPanel, 'headerRightHost');
  headerRightHost.Align = alRight; headerRightHost.Width = SIDE_W;
  headerRightHost.clProSettings.IsTransparent = True;
  headerRightHost.SetclProSettings(headerRightHost.clProSettings);

  btnYenile = uGoToFleetUnit.AddNewProButton(headerRightHost, 'btnYenile', '');
  btnYenile.Align = alRight; btnYenile.Width = 40; btnYenile.Height = 40;
  btnYenile.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  btnYenile.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#E0E0E0');
  btnYenile.clProSettings.BorderWidth     = 1;
  btnYenile.clProSettings.RoundWidth = 10; btnYenile.clProSettings.RoundHeight = 10;
  btnYenile.SetclProSettings(btnYenile.clProSettings);

  imgRefresh = uGoToFleetUnit.AddNewProImage(btnYenile, 'imgRefresh');
  imgRefresh.Align = alClient;
  imgRefresh.clProSettings.PictureSource  = 'https://backgroundsy.com/wp-content/uploads/large/refresh-icon.jpg';
  imgRefresh.clProSettings.PictureAutoFit = True;
  imgRefresh.SetclProSettings(imgRefresh.clProSettings);

  topHostPanel = uGoToFleetUnit.AddNewProPanel(rootPanel, 'topHostPanel');
  topHostPanel.Align = alTop; topHostPanel.Height = 140;
  topHostPanel.Margins.Top = 6;
  topHostPanel.clProSettings.RoundWidth = 10; topHostPanel.clProSettings.RoundHeight = 10;
  topHostPanel.clProSettings.BorderWidth = 1;
  topHostPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  topHostPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FFFFFF');
  topHostPanel.SetclProSettings(topHostPanel.clProSettings);

  bottomScroll = uGoToFleetUnit.AddNewVertScrollBox(rootPanel, 'bottomScroll');
  bottomScroll.Align = alClient; bottomScroll.Margins.Top = 6; bottomScroll.Margins.Bottom = 2;
  bottomScroll.ShowScrollBars = True;

  lytContainer = uGoToFleetUnit.AddNewLayout(bottomScroll, 'lytContainer');
  lytContainer.Align = alTop; lytContainer.Height = 640;

  btnRow = uGoToFleetUnit.AddNewLayout(lytContainer, 'btnRow');
  btnRow.Align = alTop; btnRow.Height = 50; btnRow.Margins.Bottom = 6;

  availW = rootPanel.Width - 16;
  if (availW < 0) availW = 0;
  BTN_W  = availW div 4;

  btnYeniSevkiyat = uGoToFleetUnit.AddNewProButton(btnRow, 'btnYeniSevkiyat', 'Yeni');
  btnYeniSevkiyat.Align = alLeft; btnYeniSevkiyat.Width = BTN_W; btnYeniSevkiyat.Height = 40;
  btnYeniSevkiyat.Margins.Left = 10; btnYeniSevkiyat.Margins.Right = 0; btnYeniSevkiyat.Margins.Top = 6;
  btnYeniSevkiyat.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#007BFF');
  btnYeniSevkiyat.clProSettings.FontColor       = clAlphaColor.clHexToColor('#FFFFFF');
  btnYeniSevkiyat.clProSettings.BorderWidth     = 0;
  btnYeniSevkiyat.clProSettings.RoundWidth = 12; btnYeniSevkiyat.clProSettings.RoundHeight = 12;
  btnYeniSevkiyat.SetclProSettings(btnYeniSevkiyat.clProSettings);

  btnDuzenle = uGoToFleetUnit.AddNewProButton(btnRow, 'btnDuzenle', 'Düzenle');
  btnDuzenle.Align = alLeft; btnDuzenle.Width = BTN_W; btnDuzenle.Height = 40;
  btnDuzenle.Margins.Left = 0; btnDuzenle.Margins.Right = 0; btnDuzenle.Margins.Top = 6;
  btnDuzenle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnDuzenle.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnDuzenle.clProSettings.BorderWidth     = 2;
  btnDuzenle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnDuzenle.clProSettings.RoundWidth = 12; btnDuzenle.clProSettings.RoundHeight = 12;
  btnDuzenle.SetclProSettings(btnDuzenle.clProSettings);

  btnTeslimEdildi = uGoToFleetUnit.AddNewProButton(btnRow, 'btnTeslim', 'Teslim');
  btnTeslimEdildi.Align = alLeft; btnTeslimEdildi.Width = BTN_W; btnTeslimEdildi.Height = 40;
  btnTeslimEdildi.Margins.Left = 0; btnTeslimEdildi.Margins.Right = 0; btnTeslimEdildi.Margins.Top = 6;
  btnTeslimEdildi.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnTeslimEdildi.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnTeslimEdildi.clProSettings.BorderWidth     = 2;
  btnTeslimEdildi.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnTeslimEdildi.clProSettings.RoundWidth = 12; btnTeslimEdildi.clProSettings.RoundHeight = 12;
  btnTeslimEdildi.SetclProSettings(btnTeslimEdildi.clProSettings);

  btnSil = uGoToFleetUnit.AddNewProButton(btnRow, 'btnSil', 'Sil');
  btnSil.Align = alLeft; btnSil.Width = BTN_W; btnSil.Height = 40;
  btnSil.Margins.Left = 0; btnSil.Margins.Right = 0; btnSil.Margins.Top = 6;
  btnSil.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnSil.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#DC3545');
  btnSil.clProSettings.BorderWidth     = 2;
  btnSil.clProSettings.FontColor       = clAlphaColor.clHexToColor('#DC3545');
  btnSil.clProSettings.RoundWidth = 12; btnSil.clProSettings.RoundHeight = 12;
  btnSil.SetclProSettings(btnSil.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowPlaka_m');
  row.Align = alTop; row.Height = 70;
  lblPlaka = uGoToFleetUnit.AddNewProLabel(row, 'lblPlaka', 'Tır Plakası');
  lblPlaka.Align = alTop; lblPlaka.Height = 20;
  edtPlaka = uGoToFleetUnit.AddNewProEdit(row, 'edtPlaka', '');
  edtPlaka.Align = alTop; edtPlaka.Height = 38; edtPlaka.Margins.Top = 6;
  edtPlaka.clProSettings.RoundWidth=10; edtPlaka.clProSettings.RoundHeight=10;
  edtPlaka.clProSettings.BorderWidth=2; edtPlaka.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtPlaka.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtPlaka.SetclProSettings(edtPlaka.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowSirket_m');
  row.Align = alTop; row.Height = 70;
  lblSirket = uGoToFleetUnit.AddNewProLabel(row, 'lblSirket', 'Tır Şirketi');
  lblSirket.Align = alTop; lblSirket.Height = 20;
  edtSirket = uGoToFleetUnit.AddNewProEdit(row, 'edtSirket', '');
  edtSirket.Align = alTop; edtSirket.Height = 38; edtSirket.Margins.Top = 6;
  edtSirket.clProSettings.RoundWidth=10; edtSirket.clProSettings.RoundHeight=10;
  edtSirket.clProSettings.BorderWidth=2; edtSirket.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtSirket.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtSirket.SetclProSettings(edtSirket.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowUcret_m');
  row.Align = alTop; row.Height = 70;
  lblUcret = uGoToFleetUnit.AddNewProLabel(row, 'lblUcret', 'Ücret (₺)');
  lblUcret.Align = alTop; lblUcret.Height = 20;
  edtUcret = uGoToFleetUnit.AddNewProEdit(row, 'edtUcret', '');
  edtUcret.Align = alTop; edtUcret.Height = 38; edtUcret.Margins.Top = 6;
  edtUcret.clProSettings.RoundWidth=10; edtUcret.clProSettings.RoundHeight=10;
  edtUcret.clProSettings.BorderWidth=2; edtUcret.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtUcret.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtUcret.SetclProSettings(edtUcret.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowAra_m');
  row.Align = alTop; row.Height = 70;
  lblUrunAra = uGoToFleetUnit.AddNewProLabel(row, 'lblUrunAra', 'Ara...');
  lblUrunAra.Align = alTop; lblUrunAra.Height = 20;
  edtUrunAra = uGoToFleetUnit.AddNewProEdit(row, 'edtUrunAra', '');
  edtUrunAra.Align = alTop; edtUrunAra.Height = 38; edtUrunAra.Margins.Top = 6;
  edtUrunAra.clProSettings.RoundWidth=10; edtUrunAra.clProSettings.RoundHeight=10;
  edtUrunAra.clProSettings.BorderWidth=2; edtUrunAra.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtUrunAra.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtUrunAra.SetclProSettings(edtUrunAra.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowUrun_m');
  row.Align = alTop; row.Height = 70;
  lblUrun = uGoToFleetUnit.AddNewProLabel(row, 'lblUrun', 'Ürün Seç');
  lblUrun.Align = alTop; lblUrun.Height = 20;
  cmbUrun = uGoToFleetUnit.AddNewComboBox(row, 'cmbUrun');
  cmbUrun.Align = alTop; cmbUrun.Height = 38; cmbUrun.Margins.Top = 6;

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowMiktar_m');
  row.Align = alTop; row.Height = 70;
  lblMiktar = uGoToFleetUnit.AddNewProLabel(row, 'lblMiktar', 'Miktar (Palet)');
  lblMiktar.Align = alTop; lblMiktar.Height = 20;
  edtMiktar = uGoToFleetUnit.AddNewProEdit(row, 'edtMiktar', '');
  edtMiktar.Align = alTop; edtMiktar.Height = 38; edtMiktar.Margins.Top = 6;
  edtMiktar.clProSettings.RoundWidth=10; edtMiktar.clProSettings.RoundHeight=10;
  edtMiktar.clProSettings.BorderWidth=2; edtMiktar.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtMiktar.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtMiktar.SetclProSettings(edtMiktar.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowAlici_m');
  row.Align = alTop; row.Height = 70;
  lblAlici = uGoToFleetUnit.AddNewProLabel(row, 'lblAlici', 'Alıcı (Şirket/Kişi)');
  lblAlici.Align = alTop; lblAlici.Height = 20;
  edtAlici = uGoToFleetUnit.AddNewProEdit(row, 'edtAlici', '');
  edtAlici.Align = alTop; edtAlici.Height = 38; edtAlici.Margins.Top = 6;
  edtAlici.clProSettings.RoundWidth=10; edtAlici.clProSettings.RoundHeight=10;
  edtAlici.clProSettings.BorderWidth=2; edtAlici.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtAlici.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtAlici.SetclProSettings(edtAlici.clProSettings);

  row = uGoToFleetUnit.AddNewLayout(lytContainer, 'rowHedef_m');
  row.Align = alTop; row.Height = 70;
  lblHedef = uGoToFleetUnit.AddNewProLabel(row, 'lblHedef', 'Hedef / Varış Yeri');
  lblHedef.Align = alTop; lblHedef.Height = 20;
  edtHedef = uGoToFleetUnit.AddNewProEdit(row, 'edtHedef', '');
  edtHedef.Align = alTop; edtHedef.Height = 38; edtHedef.Margins.Top = 6;
  edtHedef.clProSettings.RoundWidth=10; edtHedef.clProSettings.RoundHeight=10;
  edtHedef.clProSettings.BorderWidth=2; edtHedef.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  edtHedef.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#FFFFFF');
  edtHedef.SetclProSettings(edtHedef.clProSettings);

  uGoToFleetUnit.AddNewEvent(edtUrunAra, tbeOnChange, 'OnUrunAraChange');
}

{
  uGoToFleetUnit = TClForm.Create(Self);
  uGoToFleetUnit.SetFormBGImage('https://www.satilikkonteynerler.com/wp-content/uploads/2024/07/Satilik-Lojistik-Konteyner-1024x585.jpg');
  uGoToFleetUnit.clSetWindowState(fwsMaximized);

  g_currentUserIDforFleet = Clomosy.GlobalVariableInteger;
  //bu değerleri 0 verme sebebim bir daha bu sayfa açıldığında yenileme yapılması için
  cardsVersion = 0;
  selectedShipmentID = 0;

  if (Clomosy.PlatformIsMobile)
    CreateFleetUIMobile
  else
    CreateFleetUI;

  FleetDB_ConnectEnsure;
  LoadProductsToCombo;
  BuildActiveShipmentCards;

  uGoToFleetUnit.AddNewEvent(btnYeniSevkiyat, tbeOnClick, 'OnYeniSevkiyatClick');
  uGoToFleetUnit.AddNewEvent(btnTeslimEdildi, tbeOnClick, 'OnTeslimEdildiClick');
  uGoToFleetUnit.AddNewEvent(btnDuzenle,      tbeOnClick, 'OnDuzenleClick');
  uGoToFleetUnit.AddNewEvent(btnSil,          tbeOnClick, 'OnSilClick');
  uGoToFleetUnit.AddNewEvent(btnYenile,       tbeOnClick, 'RefreshAll');
  uGoToFleetUnit.AddNewEvent(imgRefresh,      tbeOnClick, 'RefreshAll');
  uGoToFleetUnit.AddNewEvent(tabStock,        tbeOnClick, 'OnGoStockClick');
  uGoToFleetUnit.AddNewEvent(tabHome,         tbeOnClick, 'OnGoHomeClick'); 

  uGoToFleetUnit.Run;
}
