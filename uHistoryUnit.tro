const
  COLOR_WHITE      = '#ffffff';
  COLOR_BORDER     = '#E0E0E0';
  COLOR_SUCCESS_BG = '#e8f5e9';
  COLOR_SUCCESS_BORDER = '#a5d6a7';
  COLOR_INFO_BG    = '#e3f2fd';
  COLOR_INFO_BORDER  = '#90caf9';
  COLOR_WARN_BG    = '#fff3e0';
  COLOR_WARN_BORDER  = '#ffcc80';

var
  uHistoryUnit : TClForm;

  headerPanel    : TClProPanel;
  lblTitle       : TClProLabel;
  btnGoDashboard : TClProButton;
  imgHome        : TClProImage;
  gridPanel      : TClProPanel;
  analysisPanel  : TClProPanel;

  historyGrid : TClProGrid;

  cardTotalProfit : TClProPanel; lblTotalProfit : TClProLabel; lblTotalProfitTitle : TClProLabel;
  cardBestShipment: TClProPanel; lblBestShipment: TClProLabel; lblBestShipmentTitle: TClProLabel;
  cardTotalCount  : TClProPanel; lblTotalCount  : TClProLabel; lblTotalCountTitle  : TClProLabel;

  g_currentUserIDforHistory : Integer;
  DBPath, DBPassword : String;

void GoToDashboard;
{
  try
    historyGrid = null;
    uHistoryUnit.clHide;
    Clomosy.RunUnit('uDashboardUnit');
  except
    ShowMessage('Geçiş hatası: ' + LastExceptionMessage);
  }
}

//bağlantıyı sağla
void EnsureHistoryTables;
{
  DBPassword = '';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
  else DBPath = 'C:/StoLogProject/database/new.db3';

  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  try
    Clomosy.DBSQLiteQuery.Sql.Text = 'ALTER TABLE shipments ADD COLUMN delivered_at TEXT';
    Clomosy.DBSQLiteQuery.OpenOrExecute;
  except
  }
}
//grid verilerini yükle
void LoadHistoryData;
var
  QGrid, QAnalysis : TClSQLiteQuery;
  onceCreate : Boolean;
  totalProfit, totalCount : Integer;
  bestShipmentText : String;
{
  if (g_currentUserIDforHistory <= 0) { Exit; }

  if (lblTotalProfit <> null)  lblTotalProfit.Caption  = '...';
  if (lblBestShipment <> null) lblBestShipment.Caption = '...';
  if (lblTotalCount <> null)   lblTotalCount.Caption   = '...';

  try
    Clomosy.DBSQLiteConnect(DBPath, DBPassword);

    QGrid = Clomosy.DBSQLiteQueryWith(
      'SELECT ' +
      '  s.plate AS "Plaka", ' +
      '  p.urunAdi AS "Ürün", ' +
      '  si.qty AS "Miktar", ' +
      '  COALESCE(s.receiver, '''') AS "Alıcı", ' + 
      '  s.created_at AS "Sevkiyat Tarihi", ' +
      '  s.delivered_at AS "Teslim Tarihi", ' +
      '  ( (COALESCE(p.satisFiyati, 0) * COALESCE(si.qty, 0)) - (COALESCE(p.alisFiyati, 0) * COALESCE(si.qty, 0)) - COALESCE(s.fee, 0) ) AS "Net Kâr (TL)" ' +
      'FROM shipments s ' +
      'JOIN shipment_items si ON s.id = si.shipment_id ' +
      'JOIN products p ON si.product_id = p.urunID ' +
      'WHERE s.userID = ' + IntToStr(g_currentUserIDforHistory) + ' AND s.status = "Delivered" ' +
      'ORDER BY s.delivered_at DESC'
    );
    QGrid.OpenOrExecute;

    onceCreate = (historyGrid == null);
    if (onceCreate)
    {
      historyGrid = uHistoryUnit.AddNewProGrid(gridPanel, 'historyGrid');
      historyGrid.Align = alClient;
      historyGrid.Margins.Top = 15;
      historyGrid.Margins.Bottom = 15;
      historyGrid.Margins.Left = 15;
      historyGrid.Margins.Right = 15;
    }

    historyGrid.ConnectDataSet(QGrid);
    historyGrid.AutoSizeColumns(True, 120);

    QAnalysis = Clomosy.DBSQLiteQueryWith(
      'SELECT ' +
      '  SUM((COALESCE(p.satisFiyati, 0) * COALESCE(si.qty, 0)) - (COALESCE(p.alisFiyati, 0) * COALESCE(si.qty, 0)) - COALESCE(s.fee, 0)) AS ToplamKar, ' +
      '  COUNT(DISTINCT s.id) AS TeslimatSayisi ' +
      'FROM shipments s ' +
      'JOIN shipment_items si ON s.id = si.shipment_id ' +
      'JOIN products p ON si.product_id = p.urunID ' +
      'WHERE s.userID = ' + IntToStr(g_currentUserIDforHistory) + ' AND s.status = "Delivered"'
    );
    QAnalysis.OpenOrExecute;

    if ((QAnalysis <> null) && (not QAnalysis.Eof))
    {
      totalProfit = QAnalysis.FieldByName('ToplamKar').AsInteger;
      totalCount  = QAnalysis.FieldByName('TeslimatSayisi').AsInteger;
      lblTotalProfit.Caption = IntToStr(totalProfit) + ' TL';
      lblTotalCount.Caption  = IntToStr(totalCount);
    }
    else
    {
      lblTotalProfit.Caption = '0 TL';
      lblTotalCount.Caption  = '0';
    }

    QAnalysis = Clomosy.DBSQLiteQueryWith(
      'SELECT ' +
      '  p.urunAdi, ' +
      '  ((COALESCE(p.satisFiyati, 0) * COALESCE(si.qty, 0)) - (COALESCE(p.alisFiyati, 0) * COALESCE(si.qty, 0)) - COALESCE(s.fee, 0)) AS Kar ' +
      'FROM shipments s ' +
      'JOIN shipment_items si ON s.id = si.shipment_id ' +
      'JOIN products p ON si.product_id = p.urunID ' +
      'WHERE s.userID = ' + IntToStr(g_currentUserIDforHistory) + ' AND s.status = "Delivered" ' +
      'ORDER BY Kar DESC LIMIT 1'
    );
    QAnalysis.OpenOrExecute;

    if ((QAnalysis <> null) && (not QAnalysis.Eof))
      lblBestShipment.Caption = QAnalysis.FieldByName('urunAdi').AsString + ' (' + QAnalysis.FieldByName('Kar').AsString + ' TL)'
    else
      lblBestShipment.Caption = 'Veri Yok';

  except
    lblTotalProfit.Caption = '0 TL';
    lblTotalCount.Caption  = '0';
    lblBestShipment.Caption= 'Veri Yok';
  }
}

//yenileme gibi 1
void OnHistoryShowOrActive;
{
  try
    LoadHistoryData;
  except
  }
}
//yenileme gibi 2
void OnHistoryShow;
{
  try
    LoadHistoryData;
  except
  }
}
//windows için
void CreateHistoryUIDesktop;
var
  kpiContainer : TClLayout;
  col1, col2, col3 : TClLayout;
{
  headerPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'headerPanel');
  headerPanel.Align = alTop; headerPanel.Height = 60;
  headerPanel.Margins.Top = 15; headerPanel.Margins.Left = 15; headerPanel.Margins.Right = 15;
  headerPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WHITE);
  headerPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor(COLOR_BORDER);
  headerPanel.clProSettings.BorderWidth = 1;
  headerPanel.clProSettings.RoundWidth = 12; headerPanel.clProSettings.RoundHeight = 12;
  headerPanel.SetclProSettings(headerPanel.clProSettings);

  btnGoDashboard = uHistoryUnit.AddNewProButton(headerPanel, 'btnGoDashboard', '');
  btnGoDashboard.Align = alLeft;
  btnGoDashboard.Width = 44; btnGoDashboard.Height = 44;
  btnGoDashboard.Margins.Left = 8; btnGoDashboard.Margins.Top = 8; btnGoDashboard.Margins.Right = 8;
  btnGoDashboard.Margins.Bottom = 8;
  btnGoDashboard.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGoDashboard.clProSettings.BorderWidth = 0;
  btnGoDashboard.clProSettings.RoundWidth = 10; btnGoDashboard.clProSettings.RoundHeight = 10;
  btnGoDashboard.SetclProSettings(btnGoDashboard.clProSettings);

  imgHome = uHistoryUnit.AddNewProImage(btnGoDashboard, 'imgHome');
  imgHome.Align = alClient;
  imgHome.Margins.Top = 6; imgHome.Margins.Left = 6; imgHome.Margins.Right = 6; imgHome.Margins.Bottom = 6;
  imgHome.clProSettings.PictureSource = 'https://w7.pngwing.com/pngs/848/762/png-transparent-computer-icons-home-house-home-angle-building-rectangle-thumbnail.png';
  imgHome.clProSettings.PictureAutoFit = True;
  imgHome.SetclProSettings(imgHome.clProSettings);

  lblTitle = uHistoryUnit.AddNewProLabel(headerPanel, 'lblTitle', 'Sevkiyat Geçmişi ve Analiz');
  lblTitle.Align = alClient;
  lblTitle.clProSettings.FontSize = 24;
  lblTitle.clProSettings.FontVertAlign = palcenter;
  lblTitle.clProSettings.FontHorzAlign = palcenter;
  lblTitle.SetclProSettings(lblTitle.clProSettings);

  analysisPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'analysisPanel');
  analysisPanel.Align = alBottom; analysisPanel.Height = 140;
  analysisPanel.Margins.Top = 15;
  analysisPanel.Margins.Bottom = 15;
  analysisPanel.Margins.Left = 15;
  analysisPanel.Margins.Right = 15;
  analysisPanel.clProSettings.IsTransparent = True;
  analysisPanel.SetclProSettings(analysisPanel.clProSettings);

  kpiContainer = uHistoryUnit.AddNewLayout(analysisPanel, 'kpiContainer');
  kpiContainer.Align = alClient;

  col1 = uHistoryUnit.AddNewLayout(kpiContainer, 'col1');
  col1.Align = alLeft; col1.Width = 320; col1.Margins.Right = 10;

  col2 = uHistoryUnit.AddNewLayout(kpiContainer, 'col2');
  col2.Align = alLeft; col2.Width = 360; col2.Margins.Right = 10;

  col3 = uHistoryUnit.AddNewLayout(kpiContainer, 'col3');
  col3.Align = alClient;

  cardTotalProfit = uHistoryUnit.AddNewProPanel(col1, 'cardTotalProfit');
  cardTotalProfit.Align = alClient;
  cardTotalProfit.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_SUCCESS_BG);
  cardTotalProfit.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_SUCCESS_BORDER);
  cardTotalProfit.clProSettings.BorderWidth = 1;
  cardTotalProfit.clProSettings.RoundWidth  = 10;
  cardTotalProfit.clProSettings.RoundHeight = 10;
  cardTotalProfit.SetclProSettings(cardTotalProfit.clProSettings);

  lblTotalProfit = uHistoryUnit.AddNewProLabel(cardTotalProfit, 'lblTotalProfit', '...');
  lblTotalProfit.Align = alClient;
  lblTotalProfit.clProSettings.FontSize = 28;
  lblTotalProfit.clProSettings.FontHorzAlign = palcenter;
  lblTotalProfit.clProSettings.FontVertAlign = palcenter;
  lblTotalProfit.SetclProSettings(lblTotalProfit.clProSettings);

  lblTotalProfitTitle = uHistoryUnit.AddNewProLabel(cardTotalProfit, 'lblTotalProfitTitle', 'Toplam Net Kâr');
  lblTotalProfitTitle.Align = alBottom;
  lblTotalProfitTitle.Height = 30;
  lblTotalProfitTitle.clProSettings.FontSize = 14;
  lblTotalProfitTitle.clProSettings.FontHorzAlign = palcenter;
  lblTotalProfitTitle.SetclProSettings(lblTotalProfitTitle.clProSettings);

  cardBestShipment = uHistoryUnit.AddNewProPanel(col2, 'cardBestShipment');
  cardBestShipment.Align = alClient;
  cardBestShipment.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_INFO_BG);
  cardBestShipment.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_INFO_BORDER);
  cardBestShipment.clProSettings.BorderWidth = 1;
  cardBestShipment.clProSettings.RoundWidth  = 10;
  cardBestShipment.clProSettings.RoundHeight = 10;
  cardBestShipment.SetclProSettings(cardBestShipment.clProSettings);

  lblBestShipment = uHistoryUnit.AddNewProLabel(cardBestShipment, 'lblBestShipment', '...');
  lblBestShipment.Align = alClient;
  lblBestShipment.clProSettings.FontSize = 18;
  lblBestShipment.clProSettings.FontHorzAlign = palcenter;
  lblBestShipment.clProSettings.FontVertAlign = palcenter;
  lblBestShipment.SetclProSettings(lblBestShipment.clProSettings);

  lblBestShipmentTitle = uHistoryUnit.AddNewProLabel(cardBestShipment, 'lblBestShipmentTitle', 'En Kârlı Sevkiyat');
  lblBestShipmentTitle.Align = alBottom;
  lblBestShipmentTitle.Height = 30;
  lblBestShipmentTitle.clProSettings.FontSize = 14;
  lblBestShipmentTitle.clProSettings.FontHorzAlign = palcenter;
  lblBestShipmentTitle.SetclProSettings(lblBestShipmentTitle.clProSettings);

  cardTotalCount = uHistoryUnit.AddNewProPanel(col3, 'cardTotalCount');
  cardTotalCount.Align = alClient;
  cardTotalCount.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WARN_BG);
  cardTotalCount.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_WARN_BORDER);
  cardTotalCount.clProSettings.BorderWidth = 1;
  cardTotalCount.clProSettings.RoundWidth  = 10;
  cardTotalCount.clProSettings.RoundHeight = 10;
  cardTotalCount.SetclProSettings(cardTotalCount.clProSettings);

  lblTotalCount = uHistoryUnit.AddNewProLabel(cardTotalCount, 'lblTotalCount', '...');
  lblTotalCount.Align = alClient;
  lblTotalCount.clProSettings.FontSize = 28;
  lblTotalCount.clProSettings.FontHorzAlign = palcenter;
  lblTotalCount.clProSettings.FontVertAlign = palcenter;
  lblTotalCount.SetclProSettings(lblTotalCount.clProSettings);

  lblTotalCountTitle = uHistoryUnit.AddNewProLabel(cardTotalCount, 'lblTotalCountTitle', 'Toplam Teslimat');
  lblTotalCountTitle.Align = alBottom;
  lblTotalCountTitle.Height = 30;
  lblTotalCountTitle.clProSettings.FontSize = 14;
  lblTotalCountTitle.clProSettings.FontHorzAlign = palcenter;
  lblTotalCountTitle.SetclProSettings(lblTotalCountTitle.clProSettings);

  gridPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'gridPanel');
  gridPanel.Align = alClient;
  gridPanel.Margins.Top = 15; gridPanel.Margins.Left = 15; gridPanel.Margins.Right = 15;
  gridPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WHITE);
  gridPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor(COLOR_BORDER);
  gridPanel.clProSettings.BorderWidth = 1;
  gridPanel.clProSettings.RoundWidth = 12; gridPanel.clProSettings.RoundHeight = 12;
  gridPanel.SetclProSettings(gridPanel.clProSettings);
}
//history oluştur mobil için
void CreateHistoryUIMobile;
var
  kpiContainer : TClLayout;
  row1, row2, row3 : TClLayout;
  cardPad : Integer;
{
  cardPad = 10;

  headerPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'headerPanel');
  headerPanel.Align = alTop; headerPanel.Height = 52;
  headerPanel.Margins.Top = 10; headerPanel.Margins.Left = 10; headerPanel.Margins.Right = 10;
  headerPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WHITE);
  headerPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor(COLOR_BORDER);
  headerPanel.clProSettings.BorderWidth = 1;
  headerPanel.clProSettings.RoundWidth = 10; headerPanel.clProSettings.RoundHeight = 10;
  headerPanel.SetclProSettings(headerPanel.clProSettings);

  btnGoDashboard = uHistoryUnit.AddNewProButton(headerPanel, 'btnGoDashboard', '');
  btnGoDashboard.Align = alLeft;
  btnGoDashboard.Width = 40; btnGoDashboard.Height = 40;
  btnGoDashboard.Margins.Left = 6; btnGoDashboard.Margins.Top = 6; btnGoDashboard.Margins.Right = 6;
  btnGoDashboard.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGoDashboard.clProSettings.BorderWidth = 0;
  btnGoDashboard.clProSettings.RoundWidth = 10; btnGoDashboard.clProSettings.RoundHeight = 10;
  btnGoDashboard.SetclProSettings(btnGoDashboard.clProSettings);

  imgHome = uHistoryUnit.AddNewProImage(btnGoDashboard, 'imgHome');
  imgHome.Align = alClient;
  imgHome.Margins.Top = 4; imgHome.Margins.Left = 4; imgHome.Margins.Right = 4; imgHome.Margins.Bottom = 4;
  imgHome.clProSettings.PictureSource = 'https://w7.pngwing.com/pngs/848/762/png-transparent-computer-icons-home-house-home-angle-building-rectangle-thumbnail.png';
  imgHome.clProSettings.PictureAutoFit = True;
  imgHome.SetclProSettings(imgHome.clProSettings);

  lblTitle = uHistoryUnit.AddNewProLabel(headerPanel, 'lblTitle', 'Sevkiyat Geçmişi');
  lblTitle.Align = alClient;
  lblTitle.clProSettings.FontSize = 18;
  lblTitle.clProSettings.FontVertAlign = palcenter;
  lblTitle.clProSettings.FontHorzAlign = palcenter;
  lblTitle.SetclProSettings(lblTitle.clProSettings);

  analysisPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'analysisPanel');
  analysisPanel.Align = alTop; analysisPanel.Height = 3 * 90 + (2 * 8);
  analysisPanel.Margins.Top = 10;
  analysisPanel.Margins.Bottom = 8;
  analysisPanel.Margins.Left = 10;
  analysisPanel.Margins.Right = 10;
  analysisPanel.clProSettings.IsTransparent = True;
  analysisPanel.SetclProSettings(analysisPanel.clProSettings);

  kpiContainer = uHistoryUnit.AddNewLayout(analysisPanel, 'kpiContainer_m');
  kpiContainer.Align = alClient;

  row1 = uHistoryUnit.AddNewLayout(kpiContainer, 'row1'); row1.Align = alTop; row1.Height = 90; row1.Margins.Bottom = 8;
  row2 = uHistoryUnit.AddNewLayout(kpiContainer, 'row2'); row2.Align = alTop; row2.Height = 90; row2.Margins.Bottom = 8;
  row3 = uHistoryUnit.AddNewLayout(kpiContainer, 'row3'); row3.Align = alTop; row3.Height = 90;

  cardTotalProfit = uHistoryUnit.AddNewProPanel(row1, 'cardTotalProfit_m');
  cardTotalProfit.Align = alClient;
  cardTotalProfit.Margins.Left = cardPad; cardTotalProfit.Margins.Right = cardPad;
  cardTotalProfit.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_SUCCESS_BG);
  cardTotalProfit.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_SUCCESS_BORDER);
  cardTotalProfit.clProSettings.BorderWidth = 1;
  cardTotalProfit.clProSettings.RoundWidth  = 10;
  cardTotalProfit.clProSettings.RoundHeight = 10;
  cardTotalProfit.SetclProSettings(cardTotalProfit.clProSettings);

  lblTotalProfit = uHistoryUnit.AddNewProLabel(cardTotalProfit, 'lblTotalProfit', '...');
  lblTotalProfit.Align = alClient;
  lblTotalProfit.clProSettings.FontSize = 22;
  lblTotalProfit.clProSettings.FontHorzAlign = palcenter;
  lblTotalProfit.clProSettings.FontVertAlign = palcenter;
  lblTotalProfit.SetclProSettings(lblTotalProfit.clProSettings);

  lblTotalProfitTitle = uHistoryUnit.AddNewProLabel(cardTotalProfit, 'lblTotalProfitTitle', 'Toplam Net Kâr');
  lblTotalProfitTitle.Align = alBottom;
  lblTotalProfitTitle.Height = 24;
  lblTotalProfitTitle.clProSettings.FontSize = 12;
  lblTotalProfitTitle.clProSettings.FontHorzAlign = palcenter;
  lblTotalProfitTitle.SetclProSettings(lblTotalProfitTitle.clProSettings);

  cardBestShipment = uHistoryUnit.AddNewProPanel(row2, 'cardBestShipment_m');
  cardBestShipment.Align = alClient;
  cardBestShipment.Margins.Left = cardPad; cardBestShipment.Margins.Right = cardPad;
  cardBestShipment.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_INFO_BG);
  cardBestShipment.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_INFO_BORDER);
  cardBestShipment.clProSettings.BorderWidth = 1;
  cardBestShipment.clProSettings.RoundWidth  = 10;
  cardBestShipment.clProSettings.RoundHeight = 10;
  cardBestShipment.SetclProSettings(cardBestShipment.clProSettings);

  lblBestShipment = uHistoryUnit.AddNewProLabel(cardBestShipment, 'lblBestShipment', '...');
  lblBestShipment.Align = alClient;
  lblBestShipment.clProSettings.FontSize = 16;
  lblBestShipment.clProSettings.FontHorzAlign = palcenter;
  lblBestShipment.clProSettings.FontVertAlign = palcenter;
  lblBestShipment.SetclProSettings(lblBestShipment.clProSettings);

  lblBestShipmentTitle = uHistoryUnit.AddNewProLabel(cardBestShipment, 'lblBestShipmentTitle', 'En Kârlı Sevkiyat');
  lblBestShipmentTitle.Align = alBottom;
  lblBestShipmentTitle.Height = 24;
  lblBestShipmentTitle.clProSettings.FontSize = 12;
  lblBestShipmentTitle.clProSettings.FontHorzAlign = palcenter;
  lblBestShipmentTitle.SetclProSettings(lblBestShipmentTitle.clProSettings);

  cardTotalCount = uHistoryUnit.AddNewProPanel(row3, 'cardTotalCount_m');
  cardTotalCount.Align = alClient;
  cardTotalCount.Margins.Left = cardPad; cardTotalCount.Margins.Right = cardPad;
  cardTotalCount.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WARN_BG);
  cardTotalCount.clProSettings.BorderColor     = clAlphaColor.clHexToColor(COLOR_WARN_BORDER);
  cardTotalCount.clProSettings.BorderWidth = 1;
  cardTotalCount.clProSettings.RoundWidth  = 10;
  cardTotalCount.clProSettings.RoundHeight = 10;
  cardTotalCount.SetclProSettings(cardTotalCount.clProSettings);

  lblTotalCount = uHistoryUnit.AddNewProLabel(cardTotalCount, 'lblTotalCount', '...');
  lblTotalCount.Align = alClient;
  lblTotalCount.clProSettings.FontSize = 22;
  lblTotalCount.clProSettings.FontHorzAlign = palcenter;
  lblTotalCount.clProSettings.FontVertAlign = palcenter;
  lblTotalCount.SetclProSettings(lblTotalCount.clProSettings);

  lblTotalCountTitle = uHistoryUnit.AddNewProLabel(cardTotalCount, 'lblTotalCountTitle', 'Toplam Teslimat');
  lblTotalCountTitle.Align = alBottom;
  lblTotalCountTitle.Height = 24;
  lblTotalCountTitle.clProSettings.FontSize = 12;
  lblTotalCountTitle.clProSettings.FontHorzAlign = palcenter;
  lblTotalCountTitle.SetclProSettings(lblTotalCountTitle.clProSettings);

  gridPanel = uHistoryUnit.AddNewProPanel(uHistoryUnit, 'gridPanel');
  gridPanel.Align = alClient;
  gridPanel.Margins.Top = 6; gridPanel.Margins.Left = 10; gridPanel.Margins.Right = 10; gridPanel.Margins.Bottom = 10;
  gridPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(COLOR_WHITE);
  gridPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor(COLOR_BORDER);
  gridPanel.clProSettings.BorderWidth = 1;
  gridPanel.clProSettings.RoundWidth = 10; gridPanel.clProSettings.RoundHeight = 10;
  gridPanel.SetclProSettings(gridPanel.clProSettings);
}

{
  uHistoryUnit = TClForm.Create(Self);
  uHistoryUnit.clSetWindowState(fwsMaximized);
  uHistoryUnit.SetFormColor(COLOR_WHITE, '#4554c4', clGVertical);

  g_currentUserIDforHistory = Clomosy.GlobalVariableInteger;
  if (Clomosy.PlatformIsMobile)
    CreateHistoryUIMobile
  else
    CreateHistoryUIDesktop;

  EnsureHistoryTables;
  LoadHistoryData;

  uHistoryUnit.AddNewEvent(btnGoDashboard, tbeOnClick, 'GoToDashboard');
  uHistoryUnit.AddNewEvent(imgHome,        tbeOnClick, 'GoToDashboard');

  uHistoryUnit.AddNewEvent(uHistoryUnit,   tbeOnFormActivate,         'OnHistoryShow');
  uHistoryUnit.AddNewEvent(uHistoryUnit,   tbeOnFormActivate, 'OnHistoryShowOrActive');

  uHistoryUnit.Run;
}
