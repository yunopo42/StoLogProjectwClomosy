// Stok sayfası
var
  uGoToStockUnit : TClForm;

  header1 : TClProLabel;

  mainPanel   : TClProPanel;
  gridPanel   : TClProPanel;
  productPanel: TClProPanel;

  stockGrid : TClProGrid;

  chartPanel : TClProPanel;
  stockChart : TClChart;

  lblUrunAdi   : TClProLabel;   editUrunAdi  : TClProEdit;
  lblKategori  : TClProLabel;   cmbKategori  : TClComboBox;
  lblMiktar    : TClProLabel;   editMiktar   : TClProEdit;

  lblTedarikci : TClProLabel;   editTedarikci : TClProEdit;
  lblAlis      : TClProLabel;   editAlisFiyati: TClProEdit;
  lblSatis     : TClProLabel;   editSatisFiyati: TClProEdit;

  btnEkle      : TClProButton;
  btnGuncelle  : TClProButton;
  btnSil       : TClProButton;

  horzBox      : TClHorzScrollBox;
  vertBox      : TClVertScrollBox;
  lytContainer : TClLayout;
  topRow       : TClLayout;
  midRow       : TClLayout;
  bottomRow    : TClLayout;
  colUrun      : TClLayout;
  colKategori  : TClLayout;
  colMiktar    : TClLayout;
  colTedarikci : TClLayout;
  colAlis      : TClLayout;
  colSatis     : TClLayout;
  actionsRow   : TClLayout;

  topBar         : TClProPanel;
  btnGoFleet     : TClProButton;
  btnGoDashboard : TClProButton;
  imgHome        : TClProImage;
  imgSevkiyat    : TClProImage;

  g_currentUserIDforStock : Integer;
  selectedUrunID : Integer;
  DBPath, DBPassword : String;

void GoToFleetUnitFromStock; 
{
  try
    stockGrid  = null;
    stockChart = null;
    uGoToStockUnit.clHide;
    Clomosy.RunUnit('uGoToFleetUnit');
  except
    ShowMessage('Geçiş hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void GoToDashboardFromStock;
{
  try
    stockGrid  = null;
    stockChart = null;

    uGoToStockUnit.clHide;
    Clomosy.RunUnit('uDashboardUnit');
  except
    ShowMessage('Geçiş hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}
//Anakodda tanımladığım global variable'ım.
void GetTheUserId;
{
  g_currentUserIDforStock = Clomosy.GlobalVariableInteger;
}
//database bağlantısı ve tablo yoksa oluştur func
void EnsureProductsAndLoad;
var
  QCols : TClSQLiteQuery;
  colName : String;
  hasTedarikci, hasAlis, hasSatis : Boolean;
{
  DBPassword = '';
  DBPath = 'C:/StoLogProject/database/new.db3';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';

  try
    Clomosy.DBSQLiteConnect(DBPath, DBPassword);

    Clomosy.DBSQLiteQuery.Sql.Text =
      'CREATE TABLE IF NOT EXISTS products (' +
      ' urunID INTEGER PRIMARY KEY AUTOINCREMENT,' +
      ' urunAdi TEXT,' +
      ' urunKategorisi TEXT,' +
      ' urunMiktari INTEGER NOT NULL DEFAULT 0,' +
      ' userID INTEGER NOT NULL,' +
      ' tedarikci TEXT,' +
      ' alisFiyati INTEGER DEFAULT 0,' +
      ' satisFiyati INTEGER DEFAULT 0' +
      ');';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    hasTedarikci = False; hasAlis = False; hasSatis = False;

    QCols = Clomosy.DBSQLiteQueryWith('PRAGMA table_info(products)');
    if (QCols <> null)
    {
      QCols.OpenOrExecute;
      while (not QCols.Eof)
      {
        colName = Trim(QCols.FieldByName('name').AsString);
        if (colName == 'tedarikci')   hasTedarikci = True;
        if (colName == 'alisFiyati')  hasAlis      = True;
        if (colName == 'satisFiyati') hasSatis     = True;
        QCols.Next;
      }
    }

    if (not hasTedarikci)
    {
      Clomosy.DBSQLiteQuery.Sql.Text =
        'ALTER TABLE products ADD COLUMN tedarikci TEXT';
      Clomosy.DBSQLiteQuery.OpenOrExecute;
    }
    if (not hasAlis)
    {
      Clomosy.DBSQLiteQuery.Sql.Text =
        'ALTER TABLE products ADD COLUMN alisFiyati INTEGER DEFAULT 0';
      Clomosy.DBSQLiteQuery.OpenOrExecute;
    }
    if (not hasSatis)
    {
      Clomosy.DBSQLiteQuery.Sql.Text =
        'ALTER TABLE products ADD COLUMN satisFiyati INTEGER DEFAULT 0';
      Clomosy.DBSQLiteQuery.OpenOrExecute;
    }

    Clomosy.DBSQLiteQuery.Sql.Text =
      'UPDATE products SET urunMiktari = 0 WHERE urunMiktari IS NULL';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

  except
    ShowMessage('Hata: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}
//Eğer kullanıcıya ait bir ürün yoksa stok tasarımını anlayabilmesi için demo ürünler eklenir.
void SeedDemoProductsIfEmpty;
var
  Qry : TClSQLiteQuery;
  cntStr : String;
  cnt : Integer;
{
  if (g_currentUserIDforStock <= 0)
  { ShowMessage('Geçerli bir kullanıcı ID bulunamadı! Lütfen tekrar giriş yapın.'); Exit; }

  DBPassword = '';
  DBPath = 'C:/StoLogProject/database/new.db3';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  Qry = Clomosy.DBSQLiteQueryWith(
    'SELECT COUNT(*) AS cnt FROM products WHERE userID = ' + IntToStr(g_currentUserIDforStock));
  Qry.OpenOrExecute;

  cntStr = Qry.FieldByName('cnt').AsString;
  if (cntStr == '') cnt = 0; else cnt = StrToInt(cntStr);

  if (cnt == 0)
  {
    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO products (urunAdi, urunKategorisi, urunMiktari, userID, tedarikci, alisFiyati, satisFiyati) VALUES (' +
      QuotedStr('Ahşap Palet') + ', ' + QuotedStr('Mobilya') + ', 25, ' + IntToStr(g_currentUserIDforStock) + ', ' +
      QuotedStr('Demo Tedarikçi') + ', 100, 150)';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO products (urunAdi, urunKategorisi, urunMiktari, userID, tedarikci, alisFiyati, satisFiyati) VALUES (' +
      QuotedStr('Çimento Torbası') + ', ' + QuotedStr('İnşaat') + ', 40, ' + IntToStr(g_currentUserIDforStock) + ', ' +
      QuotedStr('İnşaat A.Ş.') + ', 70, 95)';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO products (urunAdi, urunKategorisi, urunMiktari, userID, tedarikci, alisFiyati, satisFiyati) VALUES (' +
      QuotedStr('Su Şişesi') + ', ' + QuotedStr('Gıda') + ', 60, ' + IntToStr(g_currentUserIDforStock) + ', ' +
      QuotedStr('Su Ltd') + ', 5, 7)';
    Clomosy.DBSQLiteQuery.OpenOrExecute;

    ShowMessage('Demo ürünler eklendi.');
  }
}
// tıklanan grid sütununu auto filling yapan func
void GridCellClicked;
var
  clickedGrid : TClProGrid;
  row, col, idx : integer;
{
  clickedGrid = TClProGrid(uGoToStockUnit.ClSender);
  row = uGoToStockUnit.ClSenderRow;
  col = uGoToStockUnit.ClSenderCol;

  if (row > 0)
  {
    selectedUrunID        = StrToInt(clickedGrid.Cells[0, row]);
    editUrunAdi.Text      = clickedGrid.Cells[1, row];

    idx = cmbKategori.Items.IndexOf(clickedGrid.Cells[2, row]);
    if (idx >= 0) cmbKategori.ItemIndex = idx else cmbKategori.ItemIndex = -1;

    editMiktar.Text       = clickedGrid.Cells[3, row];
    editTedarikci.Text    = clickedGrid.Cells[4, row];
    editAlisFiyati.Text   = clickedGrid.Cells[5, row];
    editSatisFiyati.Text  = clickedGrid.Cells[6, row];
  }
}
// gridi ve grafiği doldurmaya yarar.
void ReloadGridAndChart;
var
  QGrid, QChart : TClSQLiteQuery;
  onceCreate : Boolean;
{
  if (g_currentUserIDforStock <= 0)
  { ShowMessage('Geçerli bir kullanıcı ID bulunamadı! Lütfen tekrar giriş yapın.'); Exit; }

  try
    DBPassword = '';
    DBPath = 'C:/StoLogProject/database/new.db3';
    if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
    Clomosy.DBSQLiteConnect(DBPath, DBPassword);

    QGrid = Clomosy.DBSQLiteQueryWith(
      'SELECT urunID, urunAdi, urunKategorisi, ' +
      'CAST(COALESCE(urunMiktari,0) AS INTEGER) AS urunMiktari, ' +
      'COALESCE(tedarikci, '''') AS tedarikci, ' +
      'CAST(COALESCE(alisFiyati,0) AS INTEGER) AS alisFiyati, ' +
      'CAST(COALESCE(satisFiyati,0) AS INTEGER) AS satisFiyati ' +
      'FROM products WHERE userID = ' + IntToStr(g_currentUserIDforStock) + ' ORDER BY urunAdi');
    QGrid.OpenOrExecute;

    onceCreate = (stockGrid == null);
    if (onceCreate)
    {
      stockGrid = uGoToStockUnit.AddNewProGrid(gridPanel, 'stockGrid');
      stockGrid.Align = alClient;
      stockGrid.Margins.Top = 10;
      stockGrid.Margins.Right = 15;
      stockGrid.Margins.Left = 15;
      uGoToStockUnit.AddNewEvent(stockGrid, tbeOnProGridCellClick, 'GridCellClicked');
    }

    stockGrid.ConnectDataSet(QGrid);
    stockGrid.AutoSizeColumns(True, 120);

    QChart = Clomosy.DBSQLiteQueryWith(
      'SELECT urunAdi, SUM(urunMiktari) AS toplam FROM products ' +
      'WHERE userID = ' + IntToStr(g_currentUserIDforStock) + ' GROUP BY urunAdi ORDER BY urunAdi');
    QChart.OpenOrExecute;

    if (stockChart == null)
    {
      stockChart = uGoToStockUnit.AddNewChart(chartPanel, 'stockChart', 'Depo Dağılımı');
      stockChart.Align = alClient;
      stockChart.Charttype = clCPie;
      stockChart.XAxisText = 'urunAdi';
      stockChart.ChartItemText = 'Ürün Stok';
      stockChart.ChartItemsValue = 'toplam';
      stockChart.ChartTitle = 'Stoktaki Ürün Dağılımı';
      stockChart.Legend.Visible = True;
    }

    stockChart.clLoadDataFromDataSet(QChart);

  except
    ShowMessage('Veri yüklenirken hata: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}

void RefreshAfterCrud;
{
  try
    ReloadGridAndChart;
  except
    ShowMessage('Yenileme hatası: ' + LastExceptionClassName + ' - ' + LastExceptionMessage);
  }
}
//tek bir fonksyon ile çoklu panellerimin tasarımını halletim
void StyleEdit(e: TClProEdit);
{
  if (e == null) Exit;
  e.clProSettings.RoundWidth      = 12;
  e.clProSettings.RoundHeight     = 12;
  e.clProSettings.BorderWidth     = 2;
  e.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  e.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  e.SetclProSettings(e.clProSettings);
}
// başlangıçta 0 olarka verilen değerlerim için (edit panelde)
void OnNumericEditFocusOrKey;
var ed : TClProEdit;
{
  ed = TClProEdit(uGoToStockUnit.ClSender);
  if (ed <> null) if (Trim(ed.Text) == '0') ed.Text = '';
}

void CreateDesktopLayout;
var
  rowPair1, rowPair2 : TClLayout;
  W_PAIR_COL : Integer;
{
  horzBox = uGoToStockUnit.AddNewHorzScrollBox(productPanel, 'horzBox');
  horzBox.Align = alClient;
  horzBox.Margins.Left = 10; horzBox.Margins.Right = 10;
  horzBox.Margins.Top  = 10; horzBox.Margins.Bottom = 10;
  horzBox.ShowScrollBars = True;

  lytContainer = uGoToStockUnit.AddNewLayout(horzBox, 'lytContainer');
  lytContainer.Align = alLeft;
  lytContainer.Width = 720;
  lytContainer.Margins.Left = 0;
  lytContainer.Margins.Right = 12;

  W_PAIR_COL = 352;

  topRow = uGoToStockUnit.AddNewLayout(lytContainer, 'topRow');
  topRow.Align = alTop;
  topRow.Height = 64;

  colUrun = uGoToStockUnit.AddNewLayout(topRow, 'colUrun');
  colUrun.Align = alLeft;
  colUrun.Width = W_PAIR_COL;
  lblUrunAdi = uGoToStockUnit.AddNewProLabel(colUrun, 'lblUrunAdi', 'Ürün Adı');
  lblUrunAdi.Align = alTop;
  lblUrunAdi.clProSettings.FontSize = 14;
  lblUrunAdi.SetclProSettings(lblUrunAdi.clProSettings);

  editUrunAdi = uGoToStockUnit.AddNewProEdit(colUrun, 'editUrunAdi', '');
  editUrunAdi.Align = alTop;
  editUrunAdi.Height = 36;
  editUrunAdi.Margins.Top = 6;
  editUrunAdi.clProSettings.BorderWidth     = 2;
  editUrunAdi.clProSettings.RoundWidth      = 12;
  editUrunAdi.clProSettings.RoundHeight     = 12;
  editUrunAdi.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  editUrunAdi.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  editUrunAdi.SetclProSettings(editUrunAdi.clProSettings);

  colKategori = uGoToStockUnit.AddNewLayout(topRow, 'colKategori');
  colKategori.Align = alLeft;
  colKategori.Width = W_PAIR_COL;
  lblKategori = uGoToStockUnit.AddNewProLabel(colKategori, 'lblKategori', 'Kategori');
  lblKategori.Align = alTop;
  lblKategori.clProSettings.FontSize = 14;
  lblKategori.SetclProSettings(lblKategori.clProSettings);

  cmbKategori = uGoToStockUnit.AddNewComboBox(colKategori, 'cmbKategori');
  cmbKategori.Align = alTop;
  cmbKategori.Height = 36;
  cmbKategori.Margins.Top = 6;
  cmbKategori.AddItem('Gıda','01');
  cmbKategori.AddItem('Kimyasal','02');
  cmbKategori.AddItem('Teknolojik','03');
  cmbKategori.AddItem('Konfeksiyon','04');
  cmbKategori.AddItem('Yapı Malzeme','05');

  rowPair1 = uGoToStockUnit.AddNewLayout(lytContainer, 'rowPair1');
  rowPair1.Align = alTop;
  rowPair1.Height = 64;
  rowPair1.Margins.Top = 8;

  colMiktar = uGoToStockUnit.AddNewLayout(rowPair1, 'colMiktar');
  colMiktar.Align = alLeft;
  colMiktar.Width = W_PAIR_COL;
  lblMiktar = uGoToStockUnit.AddNewProLabel(colMiktar, 'lblMiktar', 'Miktar (Palet)');
  lblMiktar.Align = alTop;
  lblMiktar.clProSettings.FontSize = 14;
  lblMiktar.SetclProSettings(lblMiktar.clProSettings);

  editMiktar = uGoToStockUnit.AddNewProEdit(colMiktar, 'editMiktar', '0');
  editMiktar.Align = alTop;
  editMiktar.Height = 36;
  editMiktar.Margins.Top = 6;
  editMiktar.clProSettings.BorderWidth     = 2;
  editMiktar.clProSettings.RoundWidth      = 12;
  editMiktar.clProSettings.RoundHeight     = 12;
  editMiktar.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  editMiktar.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  editMiktar.SetclProSettings(editMiktar.clProSettings);

  colTedarikci = uGoToStockUnit.AddNewLayout(rowPair1, 'colTedarikci');
  colTedarikci.Align = alLeft;
  colTedarikci.Width = W_PAIR_COL;
  lblTedarikci = uGoToStockUnit.AddNewProLabel(colTedarikci, 'lblTedarikci', 'Tedarikçi');
  lblTedarikci.Align = alTop;
  lblTedarikci.clProSettings.FontSize = 14;
  lblTedarikci.SetclProSettings(lblTedarikci.clProSettings);

  editTedarikci = uGoToStockUnit.AddNewProEdit(colTedarikci, 'editTedarikci', '');
  editTedarikci.Align = alTop;
  editTedarikci.Height = 36;
  editTedarikci.Margins.Top = 6;
  editTedarikci.clProSettings.BorderWidth     = 2;
  editTedarikci.clProSettings.RoundWidth      = 12;
  editTedarikci.clProSettings.RoundHeight     = 12;
  editTedarikci.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  editTedarikci.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  editTedarikci.SetclProSettings(editTedarikci.clProSettings);

  rowPair2 = uGoToStockUnit.AddNewLayout(lytContainer, 'rowPair2');
  rowPair2.Align = alTop;
  rowPair2.Height = 64;
  rowPair2.Margins.Top = 8;

  colAlis = uGoToStockUnit.AddNewLayout(rowPair2, 'colAlis');
  colAlis.Align = alLeft;
  colAlis.Width = W_PAIR_COL;
  lblAlis = uGoToStockUnit.AddNewProLabel(colAlis, 'lblAlis', 'Alış Fiyatı (TL)');
  lblAlis.Align = alTop;
  lblAlis.clProSettings.FontSize = 14;
  lblAlis.SetclProSettings(lblAlis.clProSettings);

  editAlisFiyati = uGoToStockUnit.AddNewProEdit(colAlis, 'editAlisFiyati', '0');
  editAlisFiyati.Align = alTop;
  editAlisFiyati.Height = 36;
  editAlisFiyati.Margins.Top = 6;
  editAlisFiyati.clProSettings.BorderWidth     = 2;
  editAlisFiyati.clProSettings.RoundWidth      = 12;
  editAlisFiyati.clProSettings.RoundHeight     = 12;
  editAlisFiyati.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  editAlisFiyati.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  editAlisFiyati.SetclProSettings(editAlisFiyati.clProSettings);

  colSatis = uGoToStockUnit.AddNewLayout(rowPair2, 'colSatis');
  colSatis.Align = alLeft;
  colSatis.Width = W_PAIR_COL;
  lblSatis = uGoToStockUnit.AddNewProLabel(colSatis, 'lblSatis', 'Satış Fiyatı (TL)');
  lblSatis.Align = alTop;
  lblSatis.clProSettings.FontSize = 14;
  lblSatis.SetclProSettings(lblSatis.clProSettings);

  editSatisFiyati = uGoToStockUnit.AddNewProEdit(colSatis, 'editSatisFiyati', '0');
  editSatisFiyati.Align = alTop;
  editSatisFiyati.Height = 36;
  editSatisFiyati.Margins.Top = 6;
  editSatisFiyati.clProSettings.BorderWidth     = 2;
  editSatisFiyati.clProSettings.RoundWidth      = 12;
  editSatisFiyati.clProSettings.RoundHeight     = 12;
  editSatisFiyati.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  editSatisFiyati.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  editSatisFiyati.SetclProSettings(editSatisFiyati.clProSettings);

  actionsRow = uGoToStockUnit.AddNewLayout(lytContainer, 'actionsRow');
  actionsRow.Align = alTop;
  actionsRow.Height = 58;
  actionsRow.Margins.Top = 12;

  btnEkle = uGoToStockUnit.AddNewProButton(actionsRow, 'btnEkle', 'Ekle');
  btnEkle.Align = alLeft;
  btnEkle.Width = 130;
  btnEkle.Height = 40;
  btnEkle.Margins.Left = 6;
  btnEkle.Margins.Top  = 8;
  btnEkle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#007BFF');
  btnEkle.clProSettings.BorderWidth     = 0;
  btnEkle.clProSettings.RoundWidth      = 12;
  btnEkle.clProSettings.RoundHeight     = 12;
  btnEkle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#ffffff');
  btnEkle.clProSettings.FontSize        = 15;
  btnEkle.SetclProSettings(btnEkle.clProSettings);

  btnGuncelle = uGoToStockUnit.AddNewProButton(actionsRow, 'btnGuncelle', 'Güncelle');
  btnGuncelle.Align = alLeft;
  btnGuncelle.Width = 140;
  btnGuncelle.Height = 40;
  btnGuncelle.Margins.Left = 10;
  btnGuncelle.Margins.Top  = 8;
  btnGuncelle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGuncelle.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnGuncelle.clProSettings.BorderWidth     = 2;
  btnGuncelle.clProSettings.RoundWidth      = 12;
  btnGuncelle.clProSettings.RoundHeight     = 12;
  btnGuncelle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnGuncelle.clProSettings.FontSize        = 15;
  btnGuncelle.SetclProSettings(btnGuncelle.clProSettings);

  btnSil = uGoToStockUnit.AddNewProButton(actionsRow, 'btnSil', 'Sil');
  btnSil.Align = alLeft;
  btnSil.Width = 130;
  btnSil.Height = 40;
  btnSil.Margins.Left = 10;
  btnSil.Margins.Top  = 8;
  btnSil.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnSil.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnSil.clProSettings.BorderWidth     = 2;
  btnSil.clProSettings.RoundWidth      = 12;
  btnSil.clProSettings.RoundHeight     = 12;
  btnSil.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnSil.clProSettings.FontSize        = 15;
  btnSil.SetclProSettings(btnSil.clProSettings);

  chartPanel = uGoToStockUnit.AddNewProPanel(horzBox, 'chartPanel');
  chartPanel.Align = alLeft;
  chartPanel.Width = 520;
  chartPanel.Margins.Left = 10; chartPanel.Margins.Right = 0;
  chartPanel.Margins.Top  = 10; chartPanel.Margins.Bottom = 10;
  chartPanel.clProSettings.BorderWidth     = 1;
  chartPanel.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#E0E0E0');
  chartPanel.clProSettings.RoundWidth      = 12;
  chartPanel.clProSettings.RoundHeight     = 12;
  chartPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  chartPanel.SetclProSettings(chartPanel.clProSettings);
}
//mobil tasarımım
void CreateMobileLayout;
var
  row, btnRow : TClLayout;
  BTN_W : Integer;
{
  vertBox = uGoToStockUnit.AddNewVertScrollBox(productPanel, 'vertBox');
  vertBox.Align = alClient;
  vertBox.Margins.Left = 10; vertBox.Margins.Right = 10;
  vertBox.Margins.Top  = 10; vertBox.Margins.Bottom = 10;
  vertBox.ShowScrollBars = True;

  lytContainer = uGoToStockUnit.AddNewLayout(vertBox, 'lytContainer');
  lytContainer.Align = alTop;
  lytContainer.Height = 560;
  lytContainer.Margins.Left = 0;
  lytContainer.Margins.Right = 0;

  BTN_W = 95;
  btnRow = uGoToStockUnit.AddNewLayout(lytContainer, 'btnRow');
  btnRow.Align = alTop; btnRow.Height = 52; btnRow.Margins.Bottom = 6;

  btnEkle = uGoToStockUnit.AddNewProButton(btnRow, 'btnEkle', 'Ekle');
  btnEkle.Align = alLeft; btnEkle.Width = BTN_W; btnEkle.Height = 40;
  btnEkle.Margins.Left = 0; btnEkle.Margins.Right = 6; btnEkle.Margins.Top = 6;
  btnEkle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#007BFF');
  btnEkle.clProSettings.BorderWidth     = 0;
  btnEkle.clProSettings.RoundWidth      = 12; btnEkle.clProSettings.RoundHeight = 12;
  btnEkle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#ffffff');
  btnEkle.clProSettings.FontSize        = 15;
  btnEkle.SetclProSettings(btnEkle.clProSettings);

  btnGuncelle = uGoToStockUnit.AddNewProButton(btnRow, 'btnGuncelle', 'Güncelle');
  btnGuncelle.Align = alLeft; btnGuncelle.Width = BTN_W; btnGuncelle.Height = 40;
  btnGuncelle.Margins.Left = 6; btnGuncelle.Margins.Right = 6; btnGuncelle.Margins.Top = 6;
  btnGuncelle.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGuncelle.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnGuncelle.clProSettings.BorderWidth     = 2;
  btnGuncelle.clProSettings.RoundWidth      = 12; btnGuncelle.clProSettings.RoundHeight = 12;
  btnGuncelle.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnGuncelle.clProSettings.FontSize        = 15;
  btnGuncelle.SetclProSettings(btnGuncelle.clProSettings);

  btnSil = uGoToStockUnit.AddNewProButton(btnRow, 'btnSil', 'Sil');
  btnSil.Align = alLeft; btnSil.Width = BTN_W; btnSil.Height = 40;
  btnSil.Margins.Left = 0; btnSil.Margins.Right = 0; btnSil.Margins.Top = 6;
  btnSil.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnSil.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnSil.clProSettings.BorderWidth     = 2;
  btnSil.clProSettings.RoundWidth      = 12; btnSil.clProSettings.RoundHeight = 12;
  btnSil.clProSettings.FontColor       = clAlphaColor.clHexToColor('#007BFF');
  btnSil.clProSettings.FontSize        = 15;
  btnSil.SetclProSettings(btnSil.clProSettings);

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowSatis');
  row.Align = alTop; row.Height = 70;
  lblSatis = uGoToStockUnit.AddNewProLabel(row, 'lblSatis', 'Satış Fiyatı (₺)');
  lblSatis.Align = alTop; lblSatis.Height = 20; lblSatis.clProSettings.FontSize = 14; lblSatis.SetclProSettings(lblSatis.clProSettings);
  editSatisFiyati = uGoToStockUnit.AddNewProEdit(row, 'editSatisFiyati', '0');
  editSatisFiyati.Align = alTop; editSatisFiyati.Height = 38; editSatisFiyati.Margins.Top = 6;
  editSatisFiyati.clProSettings.RoundWidth=12; editSatisFiyati.clProSettings.RoundHeight=12;
  editSatisFiyati.clProSettings.BorderWidth=2; editSatisFiyati.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  editSatisFiyati.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#ffffff');
  editSatisFiyati.SetclProSettings(editSatisFiyati.clProSettings);

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowAlis');
  row.Align = alTop; row.Height = 70;
  lblAlis = uGoToStockUnit.AddNewProLabel(row, 'lblAlis', 'Alış Fiyatı (₺)');
  lblAlis.Align = alTop; lblAlis.Height = 20; lblAlis.clProSettings.FontSize = 14; lblAlis.SetclProSettings(lblAlis.clProSettings);
  editAlisFiyati = uGoToStockUnit.AddNewProEdit(row, 'editAlisFiyati', '0');
  editAlisFiyati.Align = alTop; editAlisFiyati.Height = 38; editAlisFiyati.Margins.Top = 6;
  editAlisFiyati.clProSettings.RoundWidth=12; editAlisFiyati.clProSettings.RoundHeight=12;
  editAlisFiyati.clProSettings.BorderWidth=2; editAlisFiyati.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  editAlisFiyati.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#ffffff');
  editAlisFiyati.SetclProSettings(editAlisFiyati.clProSettings);

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowMiktar');
  row.Align = alTop; row.Height = 70;
  lblMiktar = uGoToStockUnit.AddNewProLabel(row, 'lblMiktar', 'Miktar (Palet)');
  lblMiktar.Align = alTop; lblMiktar.Height = 20; lblMiktar.clProSettings.FontSize = 14; lblMiktar.SetclProSettings(lblMiktar.clProSettings);
  editMiktar = uGoToStockUnit.AddNewProEdit(row, 'editMiktar', '0');
  editMiktar.Align = alTop; editMiktar.Height = 38; editMiktar.Margins.Top = 6;
  editMiktar.clProSettings.RoundWidth=12; editMiktar.clProSettings.RoundHeight=12;
  editMiktar.clProSettings.BorderWidth=2; editMiktar.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  editMiktar.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#ffffff');
  editMiktar.SetclProSettings(editMiktar.clProSettings);

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowTedarikci');
  row.Align = alTop; row.Height = 70;
  lblTedarikci = uGoToStockUnit.AddNewProLabel(row, 'lblTedarikci', 'Tedarikçi');
  lblTedarikci.Align = alTop; lblTedarikci.Height = 20; lblTedarikci.clProSettings.FontSize = 14; lblTedarikci.SetclProSettings(lblTedarikci.clProSettings);
  editTedarikci = uGoToStockUnit.AddNewProEdit(row, 'editTedarikci', '');
  editTedarikci.Align = alTop; editTedarikci.Height = 38; editTedarikci.Margins.Top = 6;
  editTedarikci.clProSettings.RoundWidth=12; editTedarikci.clProSettings.RoundHeight=12;
  editTedarikci.clProSettings.BorderWidth=2; editTedarikci.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  editTedarikci.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#ffffff');
  editTedarikci.SetclProSettings(editTedarikci.clProSettings);

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowKategori');
  row.Align = alTop; row.Height = 70;
  lblKategori = uGoToStockUnit.AddNewProLabel(row, 'lblKategori', 'Kategori');
  lblKategori.Align = alTop; lblKategori.Height = 20; lblKategori.clProSettings.FontSize = 14; lblKategori.SetclProSettings(lblKategori.clProSettings);
  cmbKategori = uGoToStockUnit.AddNewComboBox(row, 'cmbKategori');
  cmbKategori.Align = alTop; cmbKategori.Height = 38; cmbKategori.Margins.Top = 6;
  cmbKategori.AddItem('Gıda','01'); cmbKategori.AddItem('Kimyasal','02');
  cmbKategori.AddItem('Teknolojik','03'); cmbKategori.AddItem('Konfeksiyon','04');
  cmbKategori.AddItem('Yapı Malzeme','05');

  row = uGoToStockUnit.AddNewLayout(lytContainer, 'rowUrun');
  row.Align = alTop; row.Height = 70;
  lblUrunAdi = uGoToStockUnit.AddNewProLabel(row, 'lblUrunAdi', 'Ürün Adı');
  lblUrunAdi.Align = alTop; lblUrunAdi.Height = 20; lblUrunAdi.clProSettings.FontSize = 14; lblUrunAdi.SetclProSettings(lblUrunAdi.clProSettings);
  editUrunAdi = uGoToStockUnit.AddNewProEdit(row, 'editUrunAdi', '');
  editUrunAdi.Align = alTop; editUrunAdi.Height = 38; editUrunAdi.Margins.Top = 6;
  editUrunAdi.clProSettings.RoundWidth=12; editUrunAdi.clProSettings.RoundHeight=12;
  editUrunAdi.clProSettings.BorderWidth=2; editUrunAdi.clProSettings.BorderColor=clAlphaColor.clHexToColor('#007BFF');
  editUrunAdi.clProSettings.BackgroundColor=clAlphaColor.clHexToColor('#ffffff');
  editUrunAdi.SetclProSettings(editUrunAdi.clProSettings);

  chartPanel = uGoToStockUnit.AddNewProPanel(vertBox, 'chartPanel');
  chartPanel.Align = alTop; chartPanel.Height = 260;
  chartPanel.Margins.Top = 10; chartPanel.Margins.Left = 0; chartPanel.Margins.Right = 0; chartPanel.Margins.Bottom = 0;
  chartPanel.clProSettings.BorderWidth = 1;
  chartPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  chartPanel.clProSettings.RoundWidth = 12; chartPanel.clProSettings.RoundHeight = 12;
  chartPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  chartPanel.SetclProSettings(chartPanel.clProSettings);
}
// yeni urun bilgilerini DB ye kaydetip refresh atan func
void OnAddProductClick;
var
  urunAdi, kategori, miktarStr, tedarikci, alisStr, satisStr : String;
  miktar, alisVal, satisVal : Integer;
  Q : TClSQLiteQuery;
{
  if (g_currentUserIDforStock <= 0) { ShowMessage('Geçersiz kullanıcı!'); Exit; }

  urunAdi = Trim(editUrunAdi.Text);
  if (urunAdi == '') { ShowMessage('Ürün adı boş olamaz.'); Exit; }

  if (cmbKategori.ItemIndex < 0) { ShowMessage('Kategori seçiniz.'); Exit; }
  kategori = cmbKategori.Items[cmbKategori.ItemIndex];

  miktarStr = Trim(editMiktar.Text);
  if (miktarStr == '') { ShowMessage('Miktar giriniz.'); Exit; }
  miktar = StrToInt(miktarStr);
  if (miktar < 0) { ShowMessage('Miktar negatif olamaz.'); Exit; }

  tedarikci = Trim(editTedarikci.Text);
  alisStr   = Trim(editAlisFiyati.Text);
  satisStr  = Trim(editSatisFiyati.Text);
  if (alisStr == '')  alisVal = 0 else alisVal = StrToInt(alisStr);
  if (satisStr == '') satisVal = 0 else satisVal = StrToInt(satisStr);

  DBPassword = '';
  DBPath = 'C:/StoLogProject/database/new.db3';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  Q = Clomosy.DBSQLiteQueryWith(
    'SELECT urunID FROM products ' +
    'WHERE userID = ' + IntToStr(g_currentUserIDforStock) + ' ' +
    'AND UPPER(urunAdi) = UPPER(' + QuotedStr(urunAdi) + ') ' +
    'AND UPPER(urunKategorisi) = UPPER(' + QuotedStr(kategori) + ') ' +
    'LIMIT 1');
  Q.OpenOrExecute;

  if (Q.RecordCount > 0)
  {
    Clomosy.DBSQLiteQuery.Sql.Text =
      'UPDATE products SET ' +
      'urunMiktari = COALESCE(urunMiktari,0) + ' + IntToStr(miktar) + ', ' +
      'tedarikci = ' + QuotedStr(tedarikci) + ', ' +
      'alisFiyati = ' + IntToStr(alisVal) + ', ' +
      'satisFiyati = ' + IntToStr(satisVal) + ' ' +
      'WHERE urunID = ' + Q.FieldByName('urunID').AsString + ' ' +
      'AND userID = ' + IntToStr(g_currentUserIDforStock);
    Clomosy.DBSQLiteQuery.OpenOrExecute;
    ShowMessage('Mevcut ürüne +' + IntToStr(miktar) + ' eklendi ve fiyat/tedarikçi güncellendi.');
  }
  else
  {
    Clomosy.DBSQLiteQuery.Sql.Text =
      'INSERT INTO products (urunAdi, urunKategorisi, urunMiktari, userID, tedarikci, alisFiyati, satisFiyati) VALUES (' +
      QuotedStr(urunAdi) + ', ' + QuotedStr(kategori) + ', ' + IntToStr(miktar) + ', ' +
      IntToStr(g_currentUserIDforStock) + ', ' + QuotedStr(tedarikci) + ', ' +
      IntToStr(alisVal) + ', ' + IntToStr(satisVal) + ')';
    Clomosy.DBSQLiteQuery.OpenOrExecute;
    ShowMessage('Ürün eklendi.');
  }

  RefreshAfterCrud;
}
// tıklanan değeri forma auto filling  ve güncelleme
void OnUpdateProductClick;
var
  urunAdi, kategori, miktarStr, tedarikci, alisStr, satisStr : String;
  miktar, alisVal, satisVal : Integer;
{
  if (selectedUrunID <= 0) { ShowMessage('Önce grid’den bir ürün seçin.'); Exit; }

  urunAdi = Trim(editUrunAdi.Text);
  if (urunAdi == '') { ShowMessage('Ürün adı boş olamaz.'); Exit; }

  if (cmbKategori.ItemIndex < 0) { ShowMessage('Kategori seçiniz.'); Exit; }
  kategori = cmbKategori.Items[cmbKategori.ItemIndex];

  miktarStr = Trim(editMiktar.Text);
  if (miktarStr == '') { ShowMessage('Miktar giriniz.'); Exit; }
  miktar = StrToInt(miktarStr);

  tedarikci = Trim(editTedarikci.Text);
  alisStr   = Trim(editAlisFiyati.Text);
  satisStr  = Trim(editSatisFiyati.Text);
  if (alisStr == '')  alisVal = 0 else alisVal = StrToInt(alisStr);
  if (satisStr == '') satisVal = 0 else satisVal = StrToInt(satisStr);

  DBPassword = '';
  DBPath = 'C:/StoLogProject/database/new.db3';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  Clomosy.DBSQLiteQuery.Sql.Text =
    'UPDATE products SET ' +
    'urunAdi = ' + QuotedStr(urunAdi) + ', ' +
    'urunKategorisi = ' + QuotedStr(kategori) + ', ' +
    'urunMiktari = ' + IntToStr(miktar) + ', ' +
    'tedarikci = ' + QuotedStr(tedarikci) + ', ' +
    'alisFiyati = ' + IntToStr(alisVal) + ', ' +
    'satisFiyati = ' + IntToStr(satisVal) + ' ' +
    'WHERE urunID = ' + IntToStr(selectedUrunID) + ' AND userID = ' + IntToStr(g_currentUserIDforStock);
  Clomosy.DBSQLiteQuery.OpenOrExecute;

  ShowMessage('Ürün güncellendi.');
  RefreshAfterCrud;
}

void OnDeleteProductClick;
{
  if (selectedUrunID <= 0) { ShowMessage('Önce grid’den bir ürün seçin.'); Exit; }

  DBPassword = '';
  DBPath = 'C:/StoLogProject/database/new.db3';
  if (Clomosy.PlatformIsMobile) DBPath = Clomosy.AppFilesPath + 'new.db3';
  Clomosy.DBSQLiteConnect(DBPath, DBPassword);

  Clomosy.DBSQLiteQuery.Sql.Text =
    'DELETE FROM products WHERE urunID = ' + IntToStr(selectedUrunID) + ' AND userID = ' + IntToStr(g_currentUserIDforStock);
  Clomosy.DBSQLiteQuery.OpenOrExecute;

  ShowMessage('Ürün silindi.');
  editUrunAdi.Text = '';
  cmbKategori.ItemIndex = -1;
  editMiktar.Text = '';
  editTedarikci.Text = '';
  editAlisFiyati.Text = '';
  editSatisFiyati.Text = '';
  selectedUrunID = 0;

  RefreshAfterCrud;
}

{
  uGoToStockUnit = TClForm.Create(Self);
  uGoToStockUnit.clSetWindowState(fwsMaximized);

  uGoToStockUnit.SetFormColor('#ffffff', '#8aa7ff', clGVertical);

  GetTheUserId;

  mainPanel = uGoToStockUnit.AddNewProPanel(uGoToStockUnit, 'mainPanel');
  mainPanel.Align = alClient;
  mainPanel.Margins.Top = 5; mainPanel.Margins.Left = 10; mainPanel.Margins.Right = 10; mainPanel.Margins.Bottom = 20;
  mainPanel.clProSettings.RoundWidth = 15; mainPanel.clProSettings.RoundHeight = 15; mainPanel.clProSettings.BorderWidth = 0;
  mainPanel.SetclProSettings(mainPanel.clProSettings);

  topBar = uGoToStockUnit.AddNewProPanel(mainPanel, 'topBar');
  topBar.Align = alTop; topBar.Height = 52;
  topBar.Margins.Left = 10; topBar.Margins.Right = 10; topBar.Margins.Top = 8;
  topBar.clProSettings.RoundWidth = 12; topBar.clProSettings.RoundHeight = 12;
  topBar.clProSettings.BorderWidth = 1; topBar.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  topBar.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  topBar.SetclProSettings(topBar.clProSettings);

  btnGoDashboard = uGoToStockUnit.AddNewProButton(topBar, 'btnGoDashboard', '');
  btnGoDashboard.Align = alLeft;
  btnGoDashboard.Width = 44; btnGoDashboard.Height = 36;
  btnGoDashboard.Margins.Left = 8; btnGoDashboard.Margins.Top = 4; btnGoDashboard.Margins.Right = 8;btnGoDashboard.Margins.Bottom = 4;
  btnGoDashboard.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGoDashboard.clProSettings.BorderWidth = 2;
  btnGoDashboard.clProSettings.BorderColor = clAlphaColor.clHexToColor('#007BFF');
  btnGoDashboard.clProSettings.RoundWidth = 10; btnGoDashboard.clProSettings.RoundHeight = 10;
  btnGoDashboard.SetclProSettings(btnGoDashboard.clProSettings);

  imgHome = uGoToStockUnit.AddNewProImage(btnGoDashboard, 'imgHome');
  imgHome.Align = alClient;
  imgHome.Margins.Top = 4; imgHome.Margins.Left = 4; imgHome.Margins.Right = 4; imgHome.Margins.Bottom = 4;
  imgHome.clProSettings.PictureSource = 'https://w7.pngwing.com/pngs/848/762/png-transparent-computer-icons-home-house-home-angle-building-rectangle-thumbnail.png';
  imgHome.clProSettings.PictureAutoFit = True;
  imgHome.SetclProSettings(imgHome.clProSettings);

  header1 = uGoToStockUnit.AddNewProLabel(topBar, 'header1', 'STOK EKRANI');
  header1.Align = alClient; header1.clProSettings.FontSize = 22; header1.clProSettings.FontHorzAlign = palcenter;
  header1.SetclProSettings(header1.clProSettings);

  btnGoFleet = uGoToStockUnit.AddNewProButton(topBar, 'btnGoFleet', '');
  btnGoFleet.Align = alRight; btnGoFleet.Width = 44; btnGoFleet.Height = 36; btnGoFleet.Margins.Right = 10; btnGoFleet.Margins.Top = 4; btnGoFleet.Margins.Bottom = 4;
  btnGoFleet.clProSettings.BackGroundColor = clAlphaColor.clHexToColor('#00000000');
  btnGoFleet.clProSettings.BorderColor     = clAlphaColor.clHexToColor('#007BFF');
  btnGoFleet.clProSettings.BorderWidth     = 2;
  btnGoFleet.clProSettings.RoundWidth = 12; btnGoFleet.clProSettings.RoundHeight = 12; btnGoFleet.clProSettings.FontSize  = 14;
  btnGoFleet.SetclProSettings(btnGoFleet.clProSettings);

  imgSevkiyat = uGoToStockUnit.AddNewProImage(btnGoFleet,'imgSevkiyat');
  imgSevkiyat.Align = alClient;
  imgSevkiyat.Margins.Top = 4;
  imgSevkiyat.Margins.Bottom = 4;
  imgSevkiyat.Margins.Right = 4;
  imgSevkiyat.Margins.Left = 4;
  imgSevkiyat.clProSettings.PictureSource = 'https://thumbs.dreamstime.com/b/generic-semi-trailer-truck-front-view-98588347.jpg';
  imgSevkiyat.clProSettings.PictureAutoFit = True;
  imgSevkiyat.SetclProSettings(imgSevkiyat.clProSettings);

  gridPanel = uGoToStockUnit.AddNewProPanel(mainPanel, 'gridPanel');
  gridPanel.Align = alClient;
  gridPanel.Margins.Top = 12; gridPanel.Margins.Right = 12; gridPanel.Margins.Left = 12;
  gridPanel.clProSettings.RoundWidth = 12; gridPanel.clProSettings.RoundHeight = 12;
  gridPanel.clProSettings.BorderWidth = 1; gridPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  gridPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  gridPanel.SetclProSettings(gridPanel.clProSettings);

  productPanel = uGoToStockUnit.AddNewProPanel(mainPanel , 'productPanel');
  productPanel.Align = alBottom;
  if (Clomosy.PlatformIsMobile) productPanel.Height = 300 else productPanel.Height = 400;
  productPanel.Margins.Top = 10; productPanel.Margins.Left = 10; productPanel.Margins.Right = 10; productPanel.Margins.Bottom = 10;
  productPanel.clProSettings.BorderWidth = 1; productPanel.clProSettings.BorderColor = clAlphaColor.clHexToColor('#E0E0E0');
  productPanel.clProSettings.RoundWidth = 12; productPanel.clProSettings.RoundHeight = 12;
  productPanel.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
  productPanel.SetclProSettings(productPanel.clProSettings);

  if (Clomosy.PlatformIsMobile) CreateMobileLayout else CreateDesktopLayout;

  EnsureProductsAndLoad;
  SeedDemoProductsIfEmpty;

  ReloadGridAndChart;

  uGoToStockUnit.AddNewEvent(imgSevkiyat,      tbeOnClick, 'GoToFleetUnitFromStock');
  uGoToStockUnit.AddNewEvent(btnGoDashboard,  tbeOnClick, 'GoToDashboardFromStock');
  uGoToStockUnit.AddNewEvent(imgHome,         tbeOnClick, 'GoToDashboardFromStock');

  uGoToStockUnit.AddNewEvent(btnEkle,     tbeOnClick, 'OnAddProductClick');
  uGoToStockUnit.AddNewEvent(btnGuncelle, tbeOnClick, 'OnUpdateProductClick');
  uGoToStockUnit.AddNewEvent(btnSil,      tbeOnClick, 'OnDeleteProductClick');
  uGoToStockUnit.AddNewEvent(editMiktar,      tbeOnClick,    'OnNumericEditFocusOrKey');
  uGoToStockUnit.AddNewEvent(editAlisFiyati,  tbeOnClick,    'OnNumericEditFocusOrKey');
  uGoToStockUnit.AddNewEvent(editSatisFiyati, tbeOnClick,    'OnNumericEditFocusOrKey');

  uGoToStockUnit.Run;
}
